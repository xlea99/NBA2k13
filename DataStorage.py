import csv
import os
import Player
import BaseFunctions as b
import sqlite3 as sql
from datetime import date
import random

JERSEY_DICT = {
    'SixersHome': ['uh000', 'logo000', '0', 'B7E8E31A', '00000000', '61', '0', '0', '1', '1', '0', '4', '0', '0', '0',
                   '0', 'EBEBEB', '0068B3', 'DE2739', 'DE2739', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                   '0', '0', '0', '0', '0', '1', '2'],
    'SixersAway': ['ua000', 'logo000', '0', 'F45673DE', '00000000', '62', '0', '0', '1', '1', '0', '4', '1', '1', '0',
                   '0', '141414', 'DE2739', '0068B3', 'DE2739', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                   '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicAwayI': ['r1a000', 'logo000', '0', '5897FDC4', '00000000', '63', '0', '0', '4', '1', '0', '0', '1',
                           '1', '0', '0', '141414', 'EA2750', '1B3A60', 'EA2750', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicHomeII': ['r2h000', 'logo000', '0', '2BDE5EAA', '00000000', '64', '0', '0', '4', '1', '0', '1', '0',
                            '0', '0', '0', 'EBEBEB', 'ED174C', '005A9C', 'ED174C', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicAwayIII': ['r3a000', 'logo000', '0', 'DB3623A5', '00000000', '65', '0', '0', '4', '1', '0', '0', '1',
                             '1', '0', '0', '141414', '005596', 'ED174F', '005596', 'FFFFFF', '323232', '0', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicAwayIV': ['r4a000', 'logo000', '0', 'C151ECC2', '00000000', '66', '0', '0', '4', '1', '0', '1', '1',
                            '1', '0', '0', '141414', 'FA002C', '093A80', 'FA002C', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicAwayV': ['r5a000', 'logo000', '0', '792665E2', '00000000', '67', '0', '0', '4', '1', '0', '0', '1',
                           '1', '0', '0', '141414', '005596', 'F51031', '005596', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicHomeVI': ['r6h000', 'logo000', '0', 'F9F26ACF', '00000000', '68', '0', '0', '4', '1', '0', '3', '0',
                            '0', '0', '0', 'EBEBEB', 'ED174C', 'D7D7D7', 'ED174C', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicAwayVI': ['r6a000', 'logo000', '0', '32CC4081', '00000000', '69', '0', '0', '4', '1', '0', '3', '1',
                            '1', '0', '0', '141414', 'ED174C', '141414', 'ED174C', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicAwayVIAlt': ['r6x000', 'logo000', '0', '9D160E5D', '00000000', '70', '0', '0', '4', '1', '0', '3',
                               '1', '1', '0', '0', '141414', '1860AB', 'ED174C', '1860AB', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicHomeVII': ['r7h000', 'logo000', '0', '7793C8FB', '00000000', '71', '0', '0', '4', '1', '0', '3', '0',
                             '0', '0', '0', 'EBEBEB', 'ED174C', 'D7D7D7', 'ED174C', 'FFFFFF', '323232', '0', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SixersClassicAwayVII': ['r7a000', 'logo000', '0', 'E63C9A46', '00000000', '72', '0', '0', '4', '1', '0', '3', '1',
                             '1', '0', '0', '141414', 'ED174C', '141414', 'ED174C', 'FFFFFF', '323232', '0', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BobcatsHome': ['uh031', 'logo031', '31', 'B7E8E31A', '00000000', '73', '0', '0', '1', '1', '0', '1', '0', '0', '0',
                    '0', 'EBEBEB', '0A2B5C', 'A1A1A5', '0A2B5C', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '1', '2'],
    'BobcatsAway': ['ua031', 'logo031', '31', 'F45673DE', '00000000', '74', '0', '0', '1', '1', '0', '1', '1', '1', '0',
                    '0', '141414', 'A1A1A5', '0A2B5C', 'A1A1A5', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '1', '2'],
    'BobcatsRacing': ['uax031', 'logo031', '31', '97CC5AB6', '00000000', '75', '0', '0', '1', '1', '0', '1', '1', '1',
                      '0', '0', '141414', '3D6185', 'F26631', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BobcatsNBAGreen': ['uay031', 'logo031', '31', 'BDFBD6EE', '00000000', '76', '0', '0', '1', '1', '0', '1', '1', '1',
                        '0', '0', '141414', '004812', 'F47B20', '004812', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                        '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BobcatsClassicHomeI': ['r1h031', 'logo031', '31', '070E3F74', '00000000', '77', '0', '0', '4', '1', '0', '2', '0',
                            '0', '0', '0', 'EBEBEB', 'F16530', '305A8B', 'F16530', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BobcatsClassicAwayI': ['r1a031', 'logo031', '31', '5897FDC4', '00000000', '78', '0', '0', '4', '1', '0', '2', '1',
                            '1', '0', '0', '141414', 'F16530', '305A8B', '141414', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BobcatsClassicAwayIAlt': ['r1x031', 'logo031', '31', '0872C7C8', '00000000', '79', '0', '0', '4', '1', '0', '2',
                               '1', '1', '0', '0', '141414', '2E5B8D', 'F26532', '141414', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BobcatsClassicHomeII': ['r2h031', 'logo031', '31', '2BDE5EAA', '00000000', '80', '0', '0', '4', '1', '0', '0', '0',
                             '0', '0', '0', 'EBEBEB', 'D21034', '5998C8', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BucksHome': ['uh001', 'logo001', '1', 'B7E8E31A', '00000000', '81', '0', '0', '1', '1', '0', '4', '0', '0', '0',
                  '0', 'EBEBEB', '0A653F', 'C41130', '0A653F', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'BucksAway': ['ua001', 'logo001', '1', 'F45673DE', '00000000', '82', '0', '0', '1', '1', '0', '4', '1', '0', '0',
                  '0', 'EBEBEB', '0A653F', 'C41130', '0A653F', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'BucksAlternate': ['ux001', 'logo001', '1', '39976E3D', '00000000', '83', '0', '0', '1', '1', '0', '0', '1', '0',
                       '0', '0', 'EBEBEB', 'C41130', '0A653F', 'C41130', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                       '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BucksClassicHomeI': ['r1h001', 'logo001', '1', '070E3F74', '00000000', '84', '0', '0', '4', '1', '0', '0', '0',
                          '1', '0', '0', '141414', 'BC1E2C', '245224', 'BC1E2C', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BucksClassicAwayI': ['r1a001', 'logo001', '1', '5897FDC4', '00000000', '85', '0', '0', '4', '1', '0', '0', '1',
                          '0', '0', '0', 'EBEBEB', '0D2710', 'FA002C', '0D2710', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BucksClassicHomeII': ['r2h001', 'logo001', '1', '2BDE5EAA', '00000000', '86', '0', '0', '4', '1', '0', '1', '0',
                           '0', '0', '0', 'EBEBEB', 'B0132A', '5C7E39', 'B0132A', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BucksClassicAwayII': ['r2a001', 'logo001', '1', 'E0E074E4', '00000000', '87', '0', '0', '4', '1', '0', '1', '1',
                           '0', '0', '0', 'EBEBEB', '2D5E58', 'B0132A', '2D5E58', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BucksClassicHomeIII': ['r3h001', 'logo001', '1', '4A997118', '00000000', '88', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', '004812', 'E51837', '004812', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BucksClassicAwayIV': ['r4a001', 'logo001', '1', 'C151ECC2', '00000000', '89', '0', '0', '4', '1', '0', '1', '1',
                           '0', '0', '0', 'EBEBEB', '0A461B', '5E398A', '0A461B', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BullsHome': ['uh003', 'logo003', '3', 'B7E8E31A', '00000000', '90', '0', '0', '1', '1', '0', '0', '0', '0', '0',
                  '0', 'EBEBEB', 'CE1043', 'D7D7D7', 'CE1043', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'BullsAway': ['ua003', 'logo003', '3', 'F45673DE', '00000000', '91', '0', '0', '1', '1', '0', '0', '1', '1', '0',
                  '0', '141414', 'CE1043', '141414', 'CE1043', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'BullsAlternate': ['ux003', 'logo003', '3', '39976E3D', '00000000', '92', '0', '0', '1', '1', '0', '0', '1', '1',
                       '0', '0', '141414', 'DA203D', '141414', 'DA203D', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                       '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BullsLatinNights': ['uhx003', 'logo003', '3', '893F3614', '00000000', '93', '0', '0', '3', '1', '0', '0', '0', '0',
                         '0', '0', 'EBEBEB', 'CE1043', '141414', 'CE1043', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BullsStPatricks': ['uax003', 'logo003', '3', '39A2D4A5', '00000000', '94', '0', '0', '1', '1', '0', '0', '1', '1',
                        '0', '0', '141414', '008348', '141414', '008348', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                        '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BullsNBAGreen': ['uay003', 'logo003', '3', 'BDFBD6EE', '00000000', '95', '0', '0', '1', '1', '0', '0', '1', '1',
                      '0', '0', '141414', '004812', 'DA203D', '004812', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BullsClassicAwayI': ['r1a003', 'logo003', '3', '5897FDC4', '00000000', '96', '0', '0', '4', '1', '0', '0', '1',
                          '1', '0', '0', '141414', 'C71444', '141414', 'C71444', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'BullsClassicAwayII': ['r2a003', 'logo003', '3', 'E0E074E4', '00000000', '97', '0', '0', '4', '1', '0', '0', '1',
                           '1', '0', '0', '141414', '141414', 'CD1043', '141414', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersHome': ['uh004', 'logo004', '4', 'B7E8E31A', '00000000', '98', '0', '0', '1', '1', '0', '0', '0', '0',
                      '0', '0', 'EBEBEB', '860038', 'FCB034', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersAway': ['ua004', 'logo004', '4', 'F45673DE', '00000000', '99', '0', '0', '1', '1', '0', '0', '1', '1',
                      '0', '0', '141414', '860038', 'FCB034', '860038', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersCavfanatic': ['uax004', 'logo004', '4', 'C7939431', '00000000', '100', '0', '0', '4', '1', '0', '0', '1',
                            '0', '0', '0', 'EBEBEB', '860038', 'FDBA31', 'FDBA31', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicHomeI': ['r1h004', 'logo004', '4', '070E3F74', '00000000', '101', '0', '0', '4', '1', '0', '1',
                              '0', '0', '0', '0', 'EBEBEB', '6071C4', 'FF870E', '6071C4', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicAwayI': ['r1a004', 'logo004', '4', '5897FDC4', '00000000', '102', '0', '0', '4', '1', '0', '1',
                              '1', '0', '0', '0', 'EBEBEB', '6071C4', 'FF870E', '6071C4', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicHomeII': ['r2h004', 'logo004', '4', '2BDE5EAA', '00000000', '103', '0', '0', '4', '1', '0', '0',
                               '0', '0', '0', '0', 'EBEBEB', 'FEC31D', '921026', 'FEC31D', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicAwayII': ['r2a004', 'logo004', '4', 'E0E074E4', '00000000', '104', '0', '0', '4', '1', '0', '0',
                               '1', '0', '0', '0', 'EBEBEB', '970B1E', 'DEC52D', '970B1E', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicHomeIII': ['r3h004', 'logo004', '4', '4A997118', '00000000', '105', '0', '0', '4', '1', '0', '0',
                                '0', '0', '0', '0', 'EBEBEB', 'F15C22', '013C7E', 'F15C22', 'FFFFFF', '323232', '0',
                                '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicAwayIII': ['r3a004', 'logo004', '4', 'DB3623A5', '00000000', '106', '0', '0', '4', '1', '0', '0',
                                '1', '0', '0', '0', 'EBEBEB', 'F15C22', '013C7E', 'F15C22', 'FFFFFF', '323232', '0',
                                '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicHomeIV': ['r4h004', 'logo004', '4', '0A6FC68C', '00000000', '107', '0', '0', '4', '1', '0', '0',
                               '0', '0', '0', '0', 'EBEBEB', 'FCB034', '8B0B04', '8B0B04', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicAwayIV': ['r4a004', 'logo004', '4', 'C151ECC2', '00000000', '108', '0', '0', '4', '1', '0', '0',
                               '1', '0', '0', '0', 'EBEBEB', '8B0B04', 'FCB034', '8B0B04', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicAwayIVAlt': ['r4x004', 'logo004', '4', '248E0A7B', '00000000', '109', '0', '0', '4', '1', '0', '0',
                                  '1', '0', '0', '0', 'EBEBEB', '0068B0', 'FCB034', 'FCB034', 'FFFFFF', '323232', '0',
                                  '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicHomeV': ['r5h004', 'logo004', '4', '26BFA752', '00000000', '110', '0', '0', '4', '1', '0', '3',
                              '0', '0', '0', '0', 'EBEBEB', 'A90533', '987C4D', 'EBEBEB', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicAwayV': ['r5a004', 'logo004', '4', '792665E2', '00000000', '111', '0', '0', '4', '1', '0', '3',
                              '1', '1', '0', '0', '141414', 'A90533', '987C4D', 'A90533', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CavaliersClassicAwayVAlt': ['r5x004', 'logo004', '4', 'CF9C51C5', '00000000', '112', '0', '0', '4', '1', '0', '3',
                                 '1', '0', '0', '0', 'EBEBEB', '002B60', 'A90533', '002B60', 'FFFFFF', '323232', '0',
                                 '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CelticsHome': ['uh005', 'logo005', '5', 'B7E8E31A', '00000000', '113', '0', '0', '1', '1', '0', '0', '0', '0', '0',
                    '0', 'EBEBEB', '008853', 'D7D7D7', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '1', '2'],
    'CelticsAway': ['ua005', 'logo005', '5', 'F45673DE', '00000000', '114', '0', '0', '1', '1', '0', '0', '1', '1', '0',
                    '0', '141414', '008853', 'D7D7D7', '008853', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '1', '2'],
    'CelticsAlternate': ['ux005', 'logo005', '5', '39976E3D', '00000000', '115', '0', '0', '1', '1', '0', '0', '1', '1',
                         '0', '0', '141414', '008853', '141414', '008853', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CelticsStPatricks': ['uax005', 'logo005', '5', '39A2D4A5', '00000000', '116', '0', '0', '1', '1', '0', '0', '1',
                          '1', '0', '0', '141414', '008853', 'BA9754', '008853', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'CelticsClassicHomeI': ['r1h005', 'logo005', '5', '070E3F74', '00000000', '117', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', '00853E', 'D7D7D7', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'ClippersHome': ['uh006', 'logo006', '6', 'B7E8E31A', '00000000', '118', '0', '0', '1', '1', '0', '1', '0', '0',
                     '0', '0', 'EBEBEB', '0068B3', 'EE174F', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                     '0', '0', '0', '0', '0', '0', '1', '2'],
    'ClippersAway': ['ua006', 'logo006', '6', 'F45673DE', '00000000', '119', '0', '0', '1', '1', '0', '1', '1', '1',
                     '0', '0', '141414', 'EE174F', '0068B3', 'EE174F', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                     '0', '0', '0', '0', '0', '0', '1', '2'],
    'ClippersClassicAwayI': ['r1a006', 'logo006', '6', '5897FDC4', '00000000', '120', '0', '0', '4', '1', '0', '0', '1',
                             '1', '0', '0', '141414', 'F47B20', '141414', 'F47B20', 'FFFFFF', '323232', '0', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'ClippersClassicHomeII': ['r2h006', 'logo006', '6', '2BDE5EAA', '00000000', '121', '0', '0', '4', '1', '0', '3',
                              '0', '0', '0', '0', 'EBEBEB', 'E0001D', '006BB6', 'EBEBEB', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'ClippersClassicAwayII': ['r2a006', 'logo006', '6', 'E0E074E4', '00000000', '122', '0', '0', '4', '1', '0', '3',
                              '1', '1', '0', '0', '141414', 'E0001D', '006BB6', 'E0001D', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'ClippersClassicAwayIIAlt': ['r2x006', 'logo006', '6', 'E3609C76', '00000000', '123', '0', '0', '4', '1', '0', '3',
                                 '1', '1', '0', '0', '141414', '006BB6', 'E0001D', '006BB6', 'FFFFFF', '323232', '0',
                                 '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'ClippersClassicAwayIII': ['r3a006', 'logo006', '6', 'DB3623A5', '00000000', '124', '0', '0', '4', '1', '0', '0',
                               '1', '1', '0', '0', '141414', '4F91CD', 'ED174F', 'EBEBEB', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'GrizzliesHome': ['uh008', 'logo008', '8', 'B7E8E31A', '00000000', '125', '0', '0', '1', '1', '0', '3', '0', '0',
                      '0', '0', 'EBEBEB', '1A385B', '7299C6', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'GrizzliesAway': ['ua008', 'logo008', '8', 'F45673DE', '00000000', '126', '0', '0', '1', '1', '0', '3', '1', '0',
                      '0', '0', 'EBEBEB', '1A385B', '7299C6', '1A385B', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'GrizzliesAlternate': ['ux008', 'logo008', '8', '39976E3D', '00000000', '127', '0', '0', '1', '1', '0', '1', '1',
                           '0', '0', '0', 'EBEBEB', '7299C6', '1A385B', '7299C6', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'GrizzliesClassicHomeI': ['r1h008', 'logo008', '8', '070E3F74', '00000000', '128', '0', '0', '4', '1', '0', '3',
                              '0', '0', '0', '0', 'EBEBEB', '00ADA8', 'E03A3E', '00ADA8', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'GrizzliesClassicAwayI': ['r1a008', 'logo008', '8', '5897FDC4', '00000000', '129', '0', '0', '4', '1', '0', '3',
                              '1', '0', '0', '0', 'EBEBEB', '00ADA8', 'E03A3E', '00ADA8', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'GrizzliesClassicAwayII': ['r2a008', 'logo008', '8', 'E0E074E4', '00000000', '130', '0', '0', '4', '1', '0', '0',
                               '1', '0', '0', '0', 'EBEBEB', 'FDBA31', '0B8743', 'EBEBEB', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksHome': ['uh009', 'logo009', '9', 'B7E8E31A', '00000000', '131', '0', '0', '1', '1', '0', '4', '0', '0', '0',
                  '0', 'EBEBEB', '00234C', 'D21034', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'HawksAway': ['ua009', 'logo009', '9', 'F45673DE', '00000000', '132', '0', '0', '1', '1', '0', '4', '1', '1', '0',
                  '0', '141414', '00234C', 'D21034', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'HawksAlternate': ['ux009', 'logo009', '9', '39976E3D', '00000000', '133', '0', '0', '1', '1', '0', '4', '1', '1',
                       '0', '0', '141414', 'D21034', '00234C', 'D21034', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                       '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksClassicHomeI': ['r1h009', 'logo009', '9', '070E3F74', '00000000', '134', '0', '0', '4', '1', '0', '0', '0',
                          '0', '0', '0', 'EBEBEB', '1A357B', '669F51', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksClassicAwayI': ['r1a009', 'logo009', '9', '5897FDC4', '00000000', '135', '0', '0', '4', '1', '0', '0', '1',
                          '1', '0', '0', '141414', '1A357B', '669F51', '1A357B', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksClassicHomeII': ['r2h009', 'logo009', '9', '2BDE5EAA', '00000000', '136', '0', '0', '4', '1', '0', '0', '0',
                           '0', '0', '0', 'EBEBEB', 'E2373E', 'FFC323', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksClassicAwayII': ['r2a009', 'logo009', '9', 'E0E074E4', '00000000', '137', '0', '0', '4', '1', '0', '0', '1',
                           '1', '0', '0', '141414', 'E2373E', 'FFC323', 'E2373E', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksClassicHomeIII': ['r3h009', 'logo009', '9', '4A997118', '00000000', '138', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', 'FF3A3E', 'FFC425', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksClassicAwayIII': ['r3a009', 'logo009', '9', 'DB3623A5', '00000000', '139', '0', '0', '4', '1', '0', '0', '1',
                            '1', '0', '0', '141414', 'FF3A3E', 'FFC425', 'FF3A3E', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksClassicAwayIIIAlt': ['r3x009', 'logo009', '9', 'CF5210A6', '00000000', '140', '0', '0', '4', '1', '0', '3',
                               '1', '1', '0', '0', '141414', 'FFC425', 'FF3A3E', 'FFC425', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HawksClassicAwayIV': ['r4a009', 'logo009', '9', 'C151ECC2', '00000000', '141', '0', '0', '4', '1', '0', '0', '1',
                           '1', '0', '0', '141414', 'E2383F', 'FFE91E', 'E2383F', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HeatHome': ['uh010', 'logo010', '10', 'B7E8E31A', '00000000', '142', '0', '0', '1', '1', '0', '4', '0', '0', '0',
                 '0', 'EBEBEB', '98012E', 'EBEBEB', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                 '0', '0', '0', '0', '0', '1', '2'],
    'HeatAway': ['ua010', 'logo010', '10', 'F45673DE', '00000000', '143', '0', '0', '1', '1', '0', '4', '1', '0', '0',
                 '0', '141414', '98012E', '141414', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                 '0', '0', '0', '0', '0', '1', '2'],
    'HeatAlternate': ['ux010', 'logo010', '10', '39976E3D', '00000000', '144', '0', '0', '1', '1', '0', '4', '1', '0',
                      '0', '0', '141414', '98012E', 'EBEBEB', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HeatBackInBlack': ['uax010', 'logo010', '10', '758B36E8', '00000000', '145', '0', '0', '1', '1', '0', '4', '1',
                        '0', '0', '0', '141414', '141414', 'EBEBEB', '141414', 'FFFFFF', '323232', '0', '0', '0', '0',
                        '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HeatLatinNights': ['r3h010', 'logo010', '10', '893F3614', '00000000', '146', '0', '0', '3', '1', '0', '4', '0',
                        '0', '0', '0', 'EBEBEB', '98012E', '141414', '141414', 'FFFFFF', '323232', '0', '0', '0', '0',
                        '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HeatClassicHomeI': ['r1h010', 'logo010', '10', '070E3F74', '00000000', '147', '0', '0', '4', '1', '0', '0', '0',
                         '0', '0', '0', 'EBEBEB', 'E01A2C', 'EBEBEB', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HeatClassicAwayI': ['r1a010', 'logo010', '10', '5897FDC4', '00000000', '148', '0', '0', '4', '1', '0', '0', '1',
                         '0', '0', '0', '141414', 'E01A2C', '141414', '141414', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HeatClassicAwayIAlt': ['r1x010', 'logo010', '10', '0872C7C8', '00000000', '149', '0', '0', '4', '1', '0', '0', '1',
                            '0', '0', '0', '141414', 'E01A2C', '141414', '141414', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HeatClassicHomeII': ['r2h010', 'logo010', '10', '2BDE5EAA', '00000000', '150', '0', '0', '4', '1', '0', '0', '0',
                          '0', '0', '0', 'EBEBEB', 'F0037F', 'F47A20', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsHome': ['uh011', 'logo011', '11', 'B7E8E31A', '00000000', '151', '0', '0', '1', '1', '0', '4', '0', '0',
                    '0', '0', 'EBEBEB', '008FC5', 'FDC221', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsAway': ['ua011', 'logo011', '11', 'F45673DE', '00000000', '152', '0', '0', '1', '1', '0', '4', '1', '1',
                    '0', '0', '141414', '008FC5', 'FDC221', 'FDC221', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsAlternate': ['ux011', 'logo011', '11', '39976E3D', '00000000', '153', '0', '0', '1', '1', '0', '4', '1',
                         '1', '0', '0', '141414', 'FDB827', '008FC5', '272967', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsMardisGras': ['uhx011', 'logo011', '11', '6A3F34A4', '00000000', '154', '0', '0', '1', '1', '0', '4', '0',
                          '0', '0', '1', 'EBEBEB', '1D1060', 'FDBA31', 'FDBA31', '00853E', '000000', '0', '0', '0', '0',
                          '0', '0', '0', '6', '4', '6', '4', '0', '1', '2'],
    'HornetsClassicHomeI': ['r1h011', 'logo011', '11', '070E3F74', '00000000', '155', '0', '0', '4', '1', '0', '1', '0',
                            '0', '0', '0', 'EBEBEB', '0093B2', '0060AA', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsClassicAwayI': ['r1a011', 'logo011', '11', '5897FDC4', '00000000', '156', '0', '0', '4', '1', '0', '1', '1',
                            '1', '0', '0', '141414', '0093B2', '0364AD', '0093B2', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsClassicAwayIAlt': ['r1x011', 'logo011', '11', '0872C7C8', '00000000', '157', '0', '0', '4', '1', '0', '1',
                               '1', '1', '0', '0', '141414', '263997', '40AEC5', '263997', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsClassicHomeII': ['r2h011', 'logo011', '11', '2BDE5EAA', '00000000', '158', '0', '0', '4', '1', '0', '1',
                             '0', '0', '0', '0', 'EBEBEB', '0093B2', '0B52AC', 'EBEBEB', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsClassicAwayII': ['r2a011', 'logo011', '11', 'E0E074E4', '00000000', '159', '0', '0', '4', '1', '0', '1',
                             '1', '1', '0', '0', '141414', '00788A', '061368', '00788A', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsClassicHomeIII': ['r3h011', 'logo011', '11', '4A997118', '00000000', '160', '0', '0', '4', '1', '0', '3',
                              '0', '0', '0', '0', 'EBEBEB', '0093B1', 'FCB116', 'EBEBEB', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsClassicAwayIII': ['r3a011', 'logo011', '11', 'DB3623A5', '00000000', '161', '0', '0', '4', '1', '0', '3',
                              '1', '1', '0', '0', '141414', '0093B1', 'FCB116', '0093B1', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'HornetsClassicAwayIIIAlt': ['r3x011', 'logo011', '11', 'CF5210A6', '00000000', '162', '0', '0', '4', '1', '0', '3',
                                 '1', '1', '0', '0', '141414', 'FDB827', '0093B1', 'FDB827', 'FFFFFF', '323232', '0',
                                 '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzHome': ['uh012', 'logo012', '12', 'B7E8E31A', '00000000', '163', '0', '0', '1', '1', '0', '1', '0', '0', '0',
                 '0', 'EBEBEB', '002A5C', 'FCB034', '004812', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                 '0', '0', '0', '0', '0', '1', '2'],
    'JazzAway': ['ua012', 'logo012', '12', 'F45673DE', '00000000', '164', '0', '0', '1', '1', '0', '1', '1', '1', '0',
                 '0', '141414', '002A5C', 'FCB034', '004812', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                 '0', '0', '0', '0', '0', '1', '2'],
    'JazzAlternate': ['ux012', 'logo012', '12', '39976E3D', '00000000', '165', '0', '0', '1', '1', '0', '1', '1', '1',
                      '0', '0', '141414', '004812', '002A5C', 'FCB034', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzClassicHomeI': ['r1h012', 'logo012', '12', '070E3F74', '00000000', '166', '0', '0', '4', '1', '0', '1', '0',
                         '0', '0', '0', 'EBEBEB', '532F64', 'F5B82B', '532F64', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzClassicAwayI': ['r1a012', 'logo012', '12', '5897FDC4', '00000000', '167', '0', '0', '4', '1', '0', '1', '1',
                         '1', '0', '0', '141414', '441F81', 'FBC013', '441F81', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzClassicHomeII': ['r2h012', 'logo012', '12', '2BDE5EAA', '00000000', '168', '0', '0', '4', '1', '0', '1', '0',
                          '0', '0', '0', 'EBEBEB', '421F7D', '00A5E0', '421F7D', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzClassicAwayII': ['r2a012', 'logo012', '12', 'E0E074E4', '00000000', '169', '0', '0', '4', '1', '0', '1', '1',
                          '1', '0', '0', '141414', '421F7D', '00A5E0', '421F7D', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzClassicAwayIII': ['r3a012', 'logo012', '12', 'DB3623A5', '00000000', '170', '0', '0', '4', '1', '0', '1', '1',
                           '1', '0', '0', '141414', '31744E', 'FBC013', '31744E', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzClassicHomeIV': ['r4h012', 'logo012', '12', '0A6FC68C', '00000000', '171', '0', '0', '4', '1', '0', '1', '0',
                          '0', '0', '0', 'EBEBEB', '002B5C', '4C90CC', '002B5C', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzClassicAwayIV': ['r4a012', 'logo012', '12', 'C151ECC2', '00000000', '172', '0', '0', '4', '1', '0', '1', '1',
                          '1', '0', '0', '141414', '002B5C', '4C90CC', '002B5C', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'JazzClassicAwayIVAlt': ['r4x012', 'logo012', '12', '248E0A7B', '00000000', '173', '0', '0', '4', '1', '0', '1',
                             '1', '1', '0', '0', '141414', '4C90CC', '002B5C', '4C90CC', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsHome': ['uh013', 'logo013', '13', 'B7E8E31A', '00000000', '174', '0', '0', '1', '1', '0', '4', '0', '1', '0',
                  '0', '141414', '253D96', 'D7D7D7', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'KingsAway': ['ua013', 'logo013', '13', 'F45673DE', '00000000', '175', '0', '0', '1', '1', '0', '4', '1', '1', '0',
                  '0', '141414', '253D96', '141414', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'KingsAlternate': ['ux013', 'logo013', '13', '39976E3D', '00000000', '176', '0', '0', '1', '1', '0', '4', '1', '1',
                       '0', '0', '141414', '393996', 'A6A8AB', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                       '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsClassicAwayI': ['r1a013', 'logo013', '13', '5897FDC4', '00000000', '177', '0', '0', '4', '1', '0', '1', '1',
                          '1', '0', '0', '141414', '567EB9', 'F90030', '567EB9', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsClassicHomeII': ['r2h013', 'logo013', '13', '2BDE5EAA', '00000000', '178', '0', '0', '4', '1', '0', '0', '0',
                           '1', '0', '0', '141414', '393996', 'D7D7D7', '393996', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsClassicAwayII': ['r2a013', 'logo013', '13', 'E0E074E4', '00000000', '179', '0', '0', '4', '1', '0', '0', '1',
                           '1', '0', '0', '141414', '393996', '141414', '393996', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsClassicHomeIII': ['r3h013', 'logo013', '13', '4A997118', '00000000', '180', '0', '0', '4', '1', '0', '1', '0',
                            '1', '0', '0', '141414', '393A97', 'D7D7D7', '393A97', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsClassicAwayIII': ['r3a013', 'logo013', '13', 'DB3623A5', '00000000', '181', '0', '0', '4', '1', '0', '1', '1',
                            '1', '0', '0', '141414', '393A97', '141414', '393A97', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsClassicAwayIIIAlt': ['r3x013', 'logo013', '13', 'CF5210A6', '00000000', '182', '0', '0', '4', '1', '0', '1',
                               '1', '1', '0', '0', '141414', 'B79C6E', '5A3F93', 'B79C6E', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsClassicHomeIV': ['r4h013', 'logo013', '13', '0A6FC68C', '00000000', '183', '0', '0', '4', '1', '0', '0', '0',
                           '1', '0', '0', '141414', 'E51837', '0869B0', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KingsClassicAwayV': ['r5a013', 'logo013', '13', '792665E2', '00000000', '184', '0', '0', '4', '1', '0', '0', '1',
                          '1', '0', '0', '141414', '393996', '141414', '393996', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KnicksHome': ['uh014', 'logo014', '14', 'B7E8E31A', '00000000', '185', '0', '0', '1', '1', '0', '1', '0', '0', '0',
                   '0', 'EBEBEB', '007AC0', 'F37021', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                   '0', '0', '0', '0', '0', '1', '2'],
    'KnicksAway': ['ua014', 'logo014', '14', 'F45673DE', '00000000', '186', '0', '0', '1', '1', '0', '1', '1', '1', '0',
                   '0', '141414', '007AC0', 'F37021', 'F37021', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                   '0', '0', '0', '0', '0', '1', '2'],
    'KnicksLatinNights': ['uhx014', 'logo014', '14', '893F3614', '00000000', '187', '0', '0', '3', '1', '0', '1', '0',
                          '1', '0', '0', '141414', 'F37021', '00539F', 'F37021', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KnicksStPatricks': ['uax014', 'logo014', '14', '39A2D4A5', '00000000', '188', '0', '0', '1', '1', '0', '1', '1',
                         '1', '0', '0', '141414', '008348', 'F37021', '008348', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KnicksClassicHomeI': ['r1h014', 'logo014', '14', '070E3F74', '00000000', '189', '0', '0', '4', '1', '0', '1', '0',
                           '0', '0', '0', 'EBEBEB', 'F37021', '007AC1', 'F37021', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KnicksClassicAwayI': ['r1a014', 'logo014', '14', '5897FDC4', '00000000', '190', '0', '0', '4', '1', '0', '1', '1',
                           '1', '0', '0', '141414', '007AC1', 'F37021', '007AC1', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KnicksClassicHomeII': ['r2h014', 'logo014', '14', '2BDE5EAA', '00000000', '191', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', '0B4499', 'FF5C00', '0B4499', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KnicksClassicAwayII': ['r2a014', 'logo014', '14', 'E0E074E4', '00000000', '192', '0', '0', '4', '1', '0', '0', '1',
                            '1', '0', '0', '141414', '0B4499', 'FF5C00', '0B4499', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'KnicksClassicAwayIII': ['r3a014', 'logo014', '14', 'DB3623A5', '00000000', '193', '0', '0', '4', '1', '0', '0',
                             '1', '1', '0', '0', '141414', '0B4499', 'FF5C00', '0B4499', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersHome': ['uh015', 'logo015', '15', 'B7E8E31A', '00000000', '194', '0', '0', '1', '1', '0', '4', '0', '0', '0',
                   '0', 'EBEBEB', 'FDB827', '552582', 'FDB827', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                   '0', '0', '0', '0', '0', '1', '2'],
    'LakersAlternate': ['ux015', 'logo015', '15', '39976E3D', '00000000', '195', '0', '0', '1', '1', '0', '4', '0', '0',
                        '0', '0', 'EBEBEB', '552582', 'FDB827', '552582', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                        '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersAway': ['ua015', 'logo015', '15', 'F45673DE', '00000000', '196', '0', '0', '1', '1', '0', '4', '1', '1', '0',
                   '0', '141414', '552582', 'FDB827', '552582', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                   '0', '0', '0', '0', '0', '1', '2'],
    'LakersLatinNights': ['uhx015', 'logo015', '15', '893F3614', '00000000', '197', '0', '0', '3', '1', '0', '4', '0',
                          '0', '0', '0', 'EBEBEB', '552582', 'FDB827', '552582', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersClassicHomeI': ['r1h015', 'logo015', '15', '070E3F74', '00000000', '198', '0', '0', '4', '1', '0', '0', '0',
                           '0', '0', '0', 'EBEBEB', 'FDB827', '552582', 'FDB827', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersClassicAwayI': ['r1a015', 'logo015', '15', '5897FDC4', '00000000', '199', '0', '0', '4', '1', '0', '0', '1',
                           '1', '0', '0', '141414', '552582', 'FDB827', '552582', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersClassicHomeII': ['r2h015', 'logo015', '15', '2BDE5EAA', '00000000', '200', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', '739DD3', 'FDB827', '739DD3', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersClassicAwayII': ['r2a015', 'logo015', '15', 'E0E074E4', '00000000', '201', '0', '0', '4', '1', '0', '0', '1',
                            '1', '0', '0', '141414', '739DD3', 'FDB827', '739DD3', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersClassicHomeIII': ['r3h015', 'logo015', '15', '4A997118', '00000000', '202', '0', '0', '4', '1', '0', '0',
                             '0', '0', '0', '0', 'EBEBEB', '0053A0', '4B90CD', '0053A0', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersClassicAwayIII': ['r3a015', 'logo015', '15', 'DB3623A5', '00000000', '203', '0', '0', '4', '1', '0', '0',
                             '1', '1', '0', '0', '141414', '0053A0', '4B90CD', '0053A0', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'LakersClassicHomeIV': ['r4h015', 'logo015', '15', '0A6FC68C', '00000000', '204', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', 'FDB827', '552583', 'FDB827', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MagicHome': ['uh016', 'logo016', '16', 'B7E8E31A', '00000000', '205', '0', '0', '1', '1', '0', '4', '0', '0', '0',
                  '0', 'EBEBEB', '0077C0', 'D7D7D7', '0077C0', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'MagicAway': ['ua016', 'logo016', '16', 'F45673DE', '00000000', '206', '0', '0', '1', '1', '0', '4', '1', '1', '0',
                  '0', '141414', '0077C0', '141414', '0077C0', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'MagicAlternate': ['ux016', 'logo016', '16', '39976E3D', '00000000', '207', '0', '0', '1', '1', '0', '4', '1', '1',
                       '0', '0', '141414', '0077C0', '141414', '0077C0', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                       '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MagicLatinNights': ['uhx016', 'logo016', '16', '893F3614', '00000000', '208', '0', '0', '3', '1', '0', '4', '0',
                         '0', '0', '0', 'EBEBEB', '0077C0', 'A7A9AC', '0077C0', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MagicClassicHomeI': ['r1h016', 'logo016', '16', '070E3F74', '00000000', '209', '0', '0', '4', '1', '0', '0', '0',
                          '0', '0', '0', 'EBEBEB', '0077C0', 'D7D7D7', '0077C0', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MagicClassicAwayI': ['r1a016', 'logo016', '16', '5897FDC4', '00000000', '210', '0', '0', '4', '1', '0', '0', '1',
                          '1', '0', '0', '141414', '0077C0', '141414', '0077C0', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MagicClassicAwayIAlt': ['r1x016', 'logo016', '16', '0872C7C8', '00000000', '211', '0', '0', '4', '1', '0', '0',
                             '1', '1', '0', '0', '141414', '0077C0', 'D7D7D7', '0077C0', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MagicClassicHomeII': ['r2h016', 'logo016', '16', '2BDE5EAA', '00000000', '212', '0', '0', '4', '1', '0', '3', '0',
                           '0', '0', '0', 'EBEBEB', '0075BF', 'D7D7D7', '0075BF', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MagicClassicAwayII': ['r2a016', 'logo016', '16', 'E0E074E4', '00000000', '213', '0', '0', '4', '1', '0', '3', '1',
                           '1', '0', '0', '141414', '0075BF', '141414', '0075BF', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MavericksHome': ['uh017', 'logo017', '17', 'B7E8E31A', '00000000', '214', '0', '0', '1', '1', '0', '4', '0', '0',
                      '0', '0', 'EBEBEB', '00285D', '006BB6', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MavericksAway': ['ua017', 'logo017', '17', 'F45673DE', '00000000', '215', '0', '0', '1', '1', '0', '4', '1', '0',
                      '0', '0', 'EBEBEB', '00285D', '006BB6', '00285D', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MavericksAlternate': ['ux017', 'logo017', '17', '39976E3D', '00000000', '216', '0', '0', '1', '1', '0', '3', '1',
                           '0', '0', '0', 'EBEBEB', '002A5C', '0077C0', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MavericksLatinNights': ['uhx017', 'logo017', '17', '893F3614', '00000000', '217', '0', '0', '3', '1', '0', '3',
                             '0', '0', '0', '0', 'EBEBEB', '0077C0', '002D62', '0077C0', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MavericksClassicHomeI': ['r1h017', 'logo017', '17', '070E3F74', '00000000', '218', '0', '0', '4', '1', '0', '0',
                              '0', '0', '0', '0', 'EBEBEB', '00285E', '007959', '00285E', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'MavericksClassicAwayI': ['r1a017', 'logo017', '17', '5897FDC4', '00000000', '219', '0', '0', '4', '1', '0', '0',
                              '1', '0', '0', '0', 'EBEBEB', '00285E', '007959', '00285E', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'NetsHome': ['uh018', 'logo018', '18', 'B7E8E31A', '00000000', '220', '0', '0', '1', '1', '0', '0', '0', '0', '0',
                 '0', 'EBEBEB', 'EBEBEB', '141414', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                 '0', '0', '0', '0', '0', '1', '2'],
    'NetsAway': ['ua018', 'logo018', '18', 'F45673DE', '00000000', '221', '0', '0', '1', '1', '0', '0', '1', '1', '0',
                 '0', '141414', '141414', 'EBEBEB', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                 '0', '0', '0', '0', '0', '1', '2'],
    'NetsClassicAwayI': ['r1a018', 'logo018', '18', '5897FDC4', '00000000', '222', '0', '0', '4', '1', '0', '0', '1',
                         '0', '0', '0', 'EBEBEB', '0068B3', 'FA002C', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'NetsClassicHomeII': ['r2h018', 'logo018', '18', '2BDE5EAA', '00000000', '223', '0', '0', '4', '1', '0', '1', '0',
                          '0', '0', '0', 'EBEBEB', 'DF0C2B', '00285D', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'NetsClassicAwayII': ['r2a018', 'logo018', '18', 'E0E074E4', '00000000', '224', '0', '0', '4', '1', '0', '1', '1',
                          '0', '0', '0', 'EBEBEB', '00285D', 'DF0C2B', 'DF0C2B', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'NuggetsHome': ['uh019', 'logo019', '19', 'B7E8E31A', '00000000', '225', '0', '0', '1', '1', '0', '1', '0', '0',
                    '0', '0', 'EBEBEB', '4D90CD', 'FDB927', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'NuggetsAway': ['ua019', 'logo019', '19', 'F45673DE', '00000000', '226', '0', '0', '1', '1', '0', '1', '1', '0',
                    '0', '0', 'EBEBEB', '4D90CD', 'FDB927', '4D90CD', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'NuggetsNBAGreen': ['uax019', 'logo019', '19', 'BDFBD6EE', '00000000', '227', '0', '0', '1', '1', '0', '3', '1',
                        '0', '0', '0', 'EBEBEB', '0F5A49', 'FDB927', '0F5A49', 'FFFFFF', '323232', '0', '0', '0', '0',
                        '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'NuggetsClassicHomeI': ['r1h019', 'logo019', '19', '070E3F74', '00000000', '228', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', 'FDE545', '0B3D91', 'FDE545', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'NuggetsClassicAwayI': ['r1a019', 'logo019', '19', '5897FDC4', '00000000', '229', '0', '0', '4', '1', '0', '0', '1',
                            '0', '0', '0', 'EBEBEB', '0061AA', 'FFD520', '0061AA', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'NuggetsClassicHomeII': ['r2h019', 'logo019', '19', '2BDE5EAA', '00000000', '230', '0', '0', '4', '1', '0', '0',
                             '0', '0', '0', '0', 'EBEBEB', 'F15C22', '292A2C', 'F15C22', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'NuggetsClassicHomeIII': ['r3h019', 'logo019', '19', '4A997118', '00000000', '231', '0', '0', '4', '1', '0', '0',
                              '0', '0', '0', '1', 'EBEBEB', '0068B3', 'ED174F', 'EBEBEB', '0068B3', 'FFC423', '0', '0',
                              '0', '0', '0', '0', '0', '5', '6', '5', '5', '0', '1', '2'],
    'PacersHome': ['uh020', 'logo020', '20', 'B7E8E31A', '00000000', '232', '0', '0', '1', '1', '0', '4', '0', '0', '0',
                   '0', 'EBEBEB', '002D62', 'FFC425', '002D62', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                   '0', '0', '0', '0', '0', '1', '2'],
    'PacersAway': ['ua020', 'logo020', '20', 'F45673DE', '00000000', '233', '0', '0', '1', '1', '0', '4', '1', '0', '0',
                   '0', 'EBEBEB', '002D62', 'FFC425', '002D62', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                   '0', '0', '0', '0', '0', '1', '2'],
    'PacersAlternate': ['ux020', 'logo020', '20', '39976E3D', '00000000', '234', '0', '0', '1', '1', '0', '4', '1', '1',
                        '0', '0', '141414', 'F8C42A', '1B3A60', 'F8C42A', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                        '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PacersClassicAwayI': ['r1a020', 'logo020', '20', '5897FDC4', '00000000', '235', '0', '0', '4', '1', '0', '0', '1',
                           '1', '0', '0', '141414', '1F3B69', 'DBC516', '1F3B69', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PacersClassicHomeII': ['r2h020', 'logo020', '20', '2BDE5EAA', '00000000', '236', '0', '0', '4', '1', '0', '1', '0',
                            '0', '0', '0', 'EBEBEB', 'F7DC0A', '14224F', 'F7DC0A', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PacersClassicAwayII': ['r2a020', 'logo020', '20', 'E0E074E4', '00000000', '237', '0', '0', '4', '1', '0', '1', '1',
                            '0', '0', '0', 'EBEBEB', '14224F', 'F7DC01', '14224F', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PacersClassicAwayIIAlt': ['r2x020', 'logo020', '20', 'E3609C76', '00000000', '238', '0', '0', '4', '1', '0', '1',
                               '1', '1', '0', '0', '141414', 'FFD520', '00285D', 'FFD520', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PacersClassicHomeIII': ['r3h020', 'logo020', '20', '4A997118', '00000000', '239', '0', '0', '4', '1', '0', '0',
                             '0', '0', '0', '0', 'EBEBEB', '006CB7', 'FFD51E', '006CB7', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PacersClassicAwayIV': ['r4a020', 'logo020', '20', 'C151ECC2', '00000000', '240', '0', '0', '4', '1', '0', '0', '1',
                            '0', '0', '0', 'EBEBEB', '0068B3', 'FAD529', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PistonsHome': ['uh021', 'logo021', '21', 'B7E8E31A', '00000000', '241', '0', '0', '1', '1', '0', '4', '0', '0',
                    '0', '0', 'EBEBEB', 'DE0D2F', '006BB6', 'DE0D2F', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'PistonsAway': ['ua021', 'logo021', '21', 'F45673DE', '00000000', '242', '0', '0', '1', '1', '0', '4', '1', '0',
                    '0', '0', 'EBEBEB', '006BB6', 'ED174B', '006BB6', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'PistonsAlternate': ['ux021', 'logo021', '21', '39976E3D', '00000000', '243', '0', '0', '1', '1', '0', '4', '1',
                         '0', '0', '0', 'EBEBEB', 'DE0D2F', '006BB6', 'DE0D2F', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PistonsClassicHomeI': ['r1h021', 'logo021', '21', '070E3F74', '00000000', '244', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', 'DE0D2F', '006BB6', 'DE0D2F', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PistonsClassicAwayI': ['r1a021', 'logo021', '21', '5897FDC4', '00000000', '245', '0', '0', '4', '1', '0', '0', '1',
                            '0', '0', '0', 'EBEBEB', '006BB6', 'DE0D2F', '006BB6', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PistonsClassicHomeII': ['r2h021', 'logo021', '21', '2BDE5EAA', '00000000', '246', '0', '0', '4', '1', '0', '0',
                             '0', '0', '0', '0', 'EBEBEB', '238B99', 'E21B03', '238B99', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PistonsClassicAwayII': ['r2a021', 'logo021', '21', 'E0E074E4', '00000000', '247', '0', '0', '4', '1', '0', '0',
                             '1', '0', '0', '0', 'EBEBEB', '238B99', 'E21B03', '238B99', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'PistonsClassicHomeIII': ['r3h021', 'logo021', '21', '4A997118', '00000000', '248', '0', '0', '4', '1', '0', '1',
                              '0', '0', '0', '0', 'EBEBEB', 'DE0D2F', '0869B0', 'DE0D2F', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RaptorsHome': ['uh022', 'logo022', '22', 'B7E8E31A', '00000000', '249', '0', '0', '1', '1', '0', '4', '0', '0',
                    '0', '0', 'EBEBEB', 'CE1723', '141414', 'C4CED3', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'RaptorsAway': ['ua022', 'logo022', '22', 'F45673DE', '00000000', '250', '0', '0', '1', '1', '0', '4', '1', '1',
                    '0', '0', '141414', 'CE1723', '141414', 'C4CED3', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'RaptorsAlternate': ['ux022', 'logo022', '22', '39976E3D', '00000000', '251', '0', '0', '1', '1', '0', '4', '1',
                         '1', '0', '0', '141414', 'CE1723', 'C4CED3', '141414', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RaptorsMilitaryNight': ['uhx022', 'logo022', '22', 'DD7BE75B', '00000000', '252', '0', '0', '1', '1', '0', '4',
                             '0', '0', '0', '0', 'EBEBEB', '3A4B01', '141414', '886632', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RaptorsStPatricks': ['uax022', 'logo022', '22', '39A2D4A5', '00000000', '253', '0', '0', '1', '1', '0', '4', '1',
                          '1', '0', '0', '141414', '008349', '141414', '008349', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RaptorsClassicHomeI': ['r1h022', 'logo022', '22', '070E3F74', '00000000', '254', '0', '0', '4', '1', '0', '4', '0',
                            '0', '0', '0', 'EBEBEB', 'D01040', '393A96', 'D01040', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RaptorsClassicAwayI': ['r1a022', 'logo022', '22', '5897FDC4', '00000000', '255', '0', '0', '4', '1', '0', '4', '1',
                            '1', '0', '0', '141414', '393A96', 'D01040', '393A96', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RaptorsClassicHomeII': ['r2h022', 'logo022', '22', '2BDE5EAA', '00000000', '256', '0', '0', '4', '1', '0', '0',
                             '0', '0', '0', '0', 'EBEBEB', '5569B0', 'D7D7D7', '5569B0', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RocketsHome': ['uh023', 'logo023', '23', 'B7E8E31A', '00000000', '257', '0', '0', '1', '1', '0', '1', '0', '0',
                    '0', '0', 'EBEBEB', 'CE1141', 'D7D7D7', 'CE1141', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'RocketsAway': ['ua023', 'logo023', '23', 'F45673DE', '00000000', '258', '0', '0', '1', '1', '0', '1', '1', '1',
                    '0', '0', '141414', 'CE1141', 'D7D7D7', 'CE1141', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'RocketsAlternate': ['ux023', 'logo023', '23', '39976E3D', '00000000', '259', '0', '0', '1', '1', '0', '3', '1',
                         '1', '0', '0', '141414', 'D03548', 'F8C42A', 'D03548', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RocketsLatinNights': ['uhx023', 'logo023', '23', '893F3614', '00000000', '260', '0', '0', '3', '1', '0', '1', '0',
                           '0', '0', '0', 'EBEBEB', 'CE1141', 'D7D7D7', 'CE1141', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RocketsClassicHomeI': ['r1h023', 'logo023', '23', '070E3F74', '00000000', '261', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', 'CE3747', 'F7C325', 'CE3747', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RocketsClassicAwayI': ['r1a023', 'logo023', '23', '5897FDC4', '00000000', '262', '0', '0', '4', '1', '0', '0', '1',
                            '1', '0', '0', '141414', 'D40026', 'FFC400', 'D40026', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RocketsClassicHomeII': ['r2h023', 'logo023', '23', '2BDE5EAA', '00000000', '263', '0', '0', '4', '1', '0', '1',
                             '0', '0', '0', '0', 'EBEBEB', '14214E', 'CE1141', '14214E', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'RocketsClassicAwayII': ['r2a023', 'logo023', '23', 'E0E074E4', '00000000', '264', '0', '0', '4', '1', '0', '1',
                             '1', '1', '0', '0', '141414', '14214E', 'CE1141', '14214E', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SpursHome': ['uh025', 'logo025', '25', 'B7E8E31A', '00000000', '265', '0', '0', '1', '1', '0', '1', '0', '0', '0',
                  '0', 'EBEBEB', 'D7D7D7', '141414', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'SpursAway': ['ua025', 'logo025', '25', 'F45673DE', '00000000', '266', '0', '0', '1', '1', '0', '1', '1', '1', '0',
                  '0', '141414', '141414', 'D7D7D7', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                  '0', '0', '0', '0', '0', '1', '2'],
    'SpursLatinNights': ['uhx025', 'logo025', '25', '893F3614', '00000000', '267', '0', '0', '3', '1', '0', '0', '0',
                         '0', '0', '0', 'EBEBEB', 'D7D7D7', '141414', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SpursClassicHomeI': ['r1h025', 'logo025', '25', '070E3F74', '00000000', '268', '0', '0', '4', '1', '0', '0', '0',
                          '0', '0', '0', 'EBEBEB', 'C6CDD3', '141414', 'C6CDD3', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SpursClassicHomeII': ['r2h025', 'logo025', '25', '2BDE5EAA', '00000000', '269', '0', '0', '4', '1', '0', '0', '0',
                           '0', '0', '0', 'EBEBEB', 'ED174F', '0068B3', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                           '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SunsHome': ['uh026', 'logo026', '26', 'B7E8E31A', '00000000', '270', '0', '0', '1', '1', '0', '4', '0', '0', '0',
                 '0', 'EBEBEB', '4A207E', 'CD5806', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                 '0', '0', '0', '0', '0', '1', '2'],
    'SunsAway': ['ua026', 'logo026', '26', 'F45673DE', '00000000', '271', '0', '0', '1', '1', '0', '4', '1', '1', '0',
                 '0', '141414', '4A207E', 'CD5806', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                 '0', '0', '0', '0', '0', '1', '2'],
    'SunsAlternate': ['ux026', 'logo026', '26', '39976E3D', '00000000', '272', '0', '0', '1', '1', '0', '4', '1', '1',
                      '0', '0', '141414', 'CD5806', '4A207E', 'CD5806', 'FFFFFF', '323232', '0', '0', '0', '0', '0',
                      '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SunsLatinNights': ['uhx026', 'logo026', '26', '893F3614', '00000000', '273', '0', '0', '3', '1', '0', '1', '0',
                        '0', '0', '0', 'EBEBEB', 'CD5806', '4A207E', 'CD5806', 'FFFFFF', '323232', '0', '0', '0', '0',
                        '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SunsClassicHomeI': ['r1h026', 'logo026', '26', '070E3F74', '00000000', '274', '0', '0', '4', '1', '0', '0', '0',
                         '0', '0', '0', 'EBEBEB', 'F47D30', '4F2683', 'F47D30', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SunsClassicAwayI': ['r1a026', 'logo026', '26', '5897FDC4', '00000000', '275', '0', '0', '4', '1', '0', '0', '1',
                         '1', '0', '0', '141414', '4F2683', 'F47D30', '4F2683', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'SunsClassicAwayII': ['r2a026', 'logo026', '26', 'E0E074E4', '00000000', '276', '0', '0', '4', '1', '0', '0', '1',
                          '1', '0', '0', '141414', '141414', 'F37736', '141414', 'FFFFFF', '323232', '0', '0', '0', '0',
                          '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'ThunderHome': ['uh024', 'logo024', '24', 'B7E8E31A', '00000000', '277', '0', '0', '1', '1', '0', '1', '0', '0',
                    '0', '0', 'EBEBEB', '007DC3', 'F05033', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'ThunderAway': ['ua024', 'logo024', '24', 'F45673DE', '00000000', '278', '0', '0', '1', '1', '0', '1', '1', '0',
                    '0', '0', 'EBEBEB', '007DC3', 'F05033', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesHome': ['uh027', 'logo027', '27', 'B7E8E31A', '00000000', '279', '0', '0', '1', '1', '0', '4', '0',
                         '0', '0', '0', 'EBEBEB', '005595', '141414', 'A7A9AC', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesAway': ['ua027', 'logo027', '27', 'F45673DE', '00000000', '280', '0', '0', '1', '1', '0', '4', '1',
                         '1', '0', '0', '141414', '005595', '141414', 'A7A9AC', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesAlternate': ['ux027', 'logo027', '27', '39976E3D', '00000000', '281', '0', '0', '1', '1', '0', '4',
                              '1', '1', '0', '0', '141414', '005595', '141414', '141414', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesClassicHomeI': ['r1h027', 'logo027', '27', '070E3F74', '00000000', '282', '0', '0', '4', '1', '0', '0',
                                 '0', '0', '0', '0', 'EBEBEB', '005083', '00A261', 'EBEBEB', 'FFFFFF', '323232', '0',
                                 '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesClassicAwayI': ['r1a027', 'logo027', '27', '5897FDC4', '00000000', '283', '0', '0', '4', '1', '0', '0',
                                 '1', '1', '0', '0', '141414', '005083', '00A261', '141414', 'FFFFFF', '323232', '0',
                                 '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesClassicHomeII': ['r2h027', 'logo027', '27', '2BDE5EAA', '00000000', '284', '0', '0', '4', '1', '0',
                                  '0', '0', '0', '0', '0', 'EBEBEB', '005083', '008756', 'EBEBEB', 'FFFFFF', '323232',
                                  '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesClassicAwayII': ['r2a027', 'logo027', '27', 'E0E074E4', '00000000', '285', '0', '0', '4', '1', '0',
                                  '0', '1', '1', '0', '0', '141414', '005083', '008756', '141414', 'FFFFFF', '323232',
                                  '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesClassicAwayIIAlt': ['r2x027', 'logo027', '27', 'E3609C76', '00000000', '286', '0', '0', '4', '1', '0',
                                     '0', '1', '1', '0', '0', '141414', '005083', '008756', '141414', 'FFFFFF',
                                     '323232', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TimberwolvesClassicHomeIII': ['r3h027', 'logo027', '27', '4A997118', '00000000', '287', '0', '0', '4', '1', '0',
                                   '0', '0', '0', '0', '0', 'EBEBEB', '0068B3', 'BC9B6A', 'EBEBEB', 'FFFFFF', '323232',
                                   '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TrailblazersHome': ['uh028', 'logo028', '28', 'B7E8E31A', '00000000', '288', '0', '0', '1', '1', '0', '0', '0',
                         '0', '0', '0', 'EBEBEB', 'E0393E', 'D7D7D7', 'E0393E', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TrailblazersAway': ['ua028', 'logo028', '28', 'F45673DE', '00000000', '289', '0', '0', '1', '1', '0', '0', '1',
                         '1', '0', '0', '141414', 'E0393E', '141414', 'E0393E', 'FFFFFF', '323232', '0', '0', '0', '0',
                         '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TrailblazersRipCity': ['uhx028', 'logo028', '28', '846A3685', '00000000', '290', '0', '0', '4', '1', '0', '3', '0',
                            '0', '0', '0', 'EBEBEB', 'E0393E', '141414', 'E0393E', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TrailblazersClassicHomeI': ['r1h028', 'logo028', '28', '070E3F74', '00000000', '291', '0', '0', '4', '1', '0', '0',
                                 '0', '0', '0', '0', 'EBEBEB', 'D31145', 'D7D7D7', 'D31145', 'FFFFFF', '323232', '0',
                                 '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TrailblazersClassicAwayI': ['r1a028', 'logo028', '28', '5897FDC4', '00000000', '292', '0', '0', '4', '1', '0', '0',
                                 '1', '1', '0', '0', '141414', 'D31145', '141414', 'D31145', 'FFFFFF', '323232', '0',
                                 '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TrailblazersClassicHomeII': ['r2h028', 'logo028', '28', '2BDE5EAA', '00000000', '293', '0', '0', '4', '1', '0',
                                  '0', '0', '0', '0', '0', 'EBEBEB', 'B6050E', 'D7D7D7', 'B6050E', 'FFFFFF', '323232',
                                  '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'TrailblazersClassicAwayII': ['r2a028', 'logo028', '28', 'E0E074E4', '00000000', '294', '0', '0', '4', '1', '0',
                                  '0', '1', '1', '0', '0', '141414', 'B6050E', '141414', 'B6050E', 'FFFFFF', '323232',
                                  '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsHome': ['uh029', 'logo029', '29', 'B7E8E31A', '00000000', '295', '0', '0', '1', '1', '0', '4', '0', '0',
                     '0', '1', 'EBEBEB', '0068B3', 'FFC423', '0068B3', '0068B3', 'FFC423', '0', '0', '0', '0', '0', '0',
                     '0', '6', '6', '5', '5', '0', '1', '2'],
    'WarriorsAway': ['ua029', 'logo029', '29', 'F45673DE', '00000000', '296', '0', '0', '1', '1', '0', '4', '1', '1',
                     '0', '1', '141414', '0068B3', 'FFC423', '0068B3', 'FFC423', '0068B3', '0', '0', '0', '0', '0', '0',
                     '0', '6', '6', '5', '5', '0', '1', '2'],
    'WarriorsClassicHomeI': ['r1h029', 'logo029', '29', '070E3F74', '00000000', '297', '0', '0', '4', '1', '0', '0',
                             '0', '0', '0', '0', 'EBEBEB', '2C3294', 'FBD227', '2C3294', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsClassicAwayI': ['r1a029', 'logo029', '29', '5897FDC4', '00000000', '298', '0', '0', '4', '1', '0', '0',
                             '1', '1', '0', '0', '141414', '2C3294', 'FBD227', '2C3294', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsClassicHomeII': ['r2h029', 'logo029', '29', '2BDE5EAA', '00000000', '299', '0', '0', '4', '1', '0', '0',
                              '0', '0', '0', '0', 'EBEBEB', 'FFC423', '005696', 'CB073E', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsClassicHomeIII': ['r3h029', 'logo029', '29', '4A997118', '00000000', '300', '0', '0', '4', '1', '0', '0',
                               '0', '0', '0', '0', 'EBEBEB', 'F7B928', '14214E', 'F7B928', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsClassicAwayIII': ['r3a029', 'logo029', '29', 'DB3623A5', '00000000', '301', '0', '0', '4', '1', '0', '0',
                               '1', '1', '0', '0', '141414', '005696', 'FFC431', '005696', 'FFFFFF', '323232', '0', '0',
                               '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsClassicHomeIV': ['r4h029', 'logo029', '29', '0A6FC68C', '00000000', '302', '0', '0', '4', '1', '0', '3',
                              '0', '0', '0', '0', 'EBEBEB', '00275D', 'DB5833', 'DB5833', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsClassicAwayIV': ['r4a029', 'logo029', '29', 'C151ECC2', '00000000', '303', '0', '0', '4', '1', '0', '3',
                              '1', '1', '0', '0', '141414', '00275D', 'F9A01B', 'DB5833', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsClassicAwayIVAlt': ['r4x029', 'logo029', '29', '248E0A7B', '00000000', '304', '0', '0', '4', '1', '0', '3',
                                 '1', '1', '0', '0', '141414', 'DB5833', '00275D', '00275D', 'FFFFFF', '323232', '0',
                                 '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WarriorsClassicHomeV': ['r5h029', 'logo029', '29', '26BFA752', '00000000', '305', '0', '0', '4', '1', '0', '0',
                             '0', '0', '0', '0', 'EBEBEB', 'FFC423', '0068B3', 'FFC423', 'FFFFFF', '323232', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WizardsHome': ['uh002', 'logo002', '2', 'B7E8E31A', '00000000', '306', '0', '0', '1', '1', '0', '1', '0', '0', '0',
                    '0', 'EBEBEB', 'E31837', '002B5C', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '1', '2'],
    'WizardsAway': ['ua002', 'logo002', '2', 'F45673DE', '00000000', '307', '0', '0', '1', '1', '0', '1', '1', '1', '0',
                    '0', '141414', 'E31837', '002B5C', '141414', 'FFFFFF', '323232', '0', '0', '0', '0', '0', '0', '0',
                    '0', '0', '0', '0', '0', '1', '2'],
    'WizardsClassicHomeI': ['r1h002', 'logo002', '2', '070E3F74', '00000000', '308', '0', '0', '4', '1', '0', '0', '0',
                            '0', '0', '0', 'EBEBEB', '0B3D91', 'E90012', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WizardsClassicAwayI': ['r1a002', 'logo002', '2', '5897FDC4', '00000000', '309', '0', '0', '4', '1', '0', '0', '1',
                            '1', '0', '0', '141414', '0B3D91', 'E90012', '0B3D91', 'FFFFFF', '323232', '0', '0', '0',
                            '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WizardsClassicHomeII': ['r2h002', 'logo002', '2', '2BDE5EAA', '00000000', '310', '0', '0', '4', '1', '0', '1', '0',
                             '0', '0', '0', 'EBEBEB', 'EE7B31', '1E3B60', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WizardsClassicHomeIII': ['r3h002', 'logo002', '2', '4A997118', '00000000', '311', '0', '0', '4', '1', '0', '0',
                              '0', '0', '0', '0', 'EBEBEB', 'BC9B6A', '002D62', 'EBEBEB', 'FFFFFF', '323232', '0', '0',
                              '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WizardsClassicHomeIV': ['r4h002', 'logo002', '2', '0A6FC68C', '00000000', '312', '0', '0', '4', '1', '0', '1', '0',
                             '0', '0', '0', 'EBEBEB', '005083', 'BC9B6A', 'EBEBEB', 'FFFFFF', '323232', '0', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WizardsClassicAwayIV': ['r4a002', 'logo002', '2', 'C151ECC2', '00000000', '313', '0', '0', '4', '1', '0', '1', '1',
                             '1', '0', '0', '141414', '005083', 'BC9B6A', '141414', 'FFFFFF', '323232', '0', '0', '0',
                             '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2'],
    'WizardsClassicAwayIVAlt': ['r4x002', 'logo002', '2', '248E0A7B', '00000000', '314', '0', '0', '4', '1', '0', '1',
                                '1', '1', '0', '0', '141414', 'BC9B6A', '191919', '141414', 'FFFFFF', '323232', '0',
                                '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '2']}
# TODO BYE BYE BITCH
JERSEYS_CSV_VALUES = ["ID",
                      "Texture",
                      "Logo",
                      "GID",
                      "Name",
                      "CATTmplNm",
                      "JerseyID",
                      "JType_c",
                      "JType",
                      "JType2",
                      "CAT_Usage",
                      "ShortsStl",
                      "JModel",
                      "IsAway",
                      "SocksCol",
                      "UseCusClrs",
                      "CusClrs4Nm",
                      "TColor1",
                      "TColor2",
                      "TColor3",
                      "TColor4",
                      "TColor5",
                      "TColor6",
                      "JColor1",
                      "JColor2",
                      "JColor3",
                      "LColor1",
                      "LColor2",
                      "LColor3",
                      "NameColor",
                      "FrNumCol1",
                      "FrNumCol2",
                      "BkNumCol1",
                      "BkNumCol2",
                      "ShsColor1",
                      "ShsColor2",
                      "ShsColor3"]

# This list contains nothing but a list of unique, jumbled names, ordered by Player RosterID
# to avoid any duplicate naming issues.
JUMBLED_NAMES = [["*___--~*~**-|-=-", "*==_*~|=*=_*=|~|"],
                 ["*___=-=~*-~*~=|~", "*-_=-*=|=|_-~~|="],
                 ["*___|~_=_**_*_|=", "*=_-_*-=|~--=|=_"],
                 ["*___~*=-_=|*~=*_", "*~**_|~|_|_-===*"],
                 ["*__-*=--___*__*_", "*_|~=-=|==_=-~_~"],
                 ["*__-*=*|=-=**_=|", "*~_|_*-~*==_*~**"],
                 ["*__-|_|__*_|||*=", "*-=-|-*|||___~=="],
                 ["*__-||=|=_~~-=*|", "***|-~=-||=||__*"],
                 ["*__-~_-_-*_*~--=", "*|~-**~*_||*-=|*"],
                 ["*__-~=||_=|=|~=*", "*|*=|~-|*==_=|_-"],
                 ["*__*_-*=-=*=|~*=", "*_*~=_-|**__|_-|"],
                 ["*__*=_=~_-*||_~*", "*=|*|==|=||-_~|~"],
                 ["*__*~__|_-~-*__*", "*~|~*_*__-_**~=|"],
                 ["*__=-__|*-|_==|~", "*-|=*=~*~|_~*=*="],
                 ["*__=||=_=-=|~~*=", "*|-=*=_~-_~*=|_|"],
                 ["*__|-_-~*==~==*~", "*-=~___=|~~-||=_"],
                 ["*__|-~||_==--|*_", "*~_|-~-*=*|__||*"],
                 ["*__|*==-__~_~-=|", "**-_=-~=-**_=~~-"],
                 ["*__|*|~=-|-_|--|", "*~*=|*-**--~*_*_"],
                 ["*__|*~--*__=--|~", "*-~*-~==--=*____"],
                 ["*__|=~~_*~~~-=-~", "**|=_____-=_|=|-"],
                 ["*__|~_*~=|~=_-|~", "*~|_-_-=_|*__~~_"],
                 ["*__|~|~=-~~~-=-=", "**|*~||~--*=~-*~"],
                 ["*__~-__==-=-_|--", "**-~-~=~|~=|~-|*"],
                 ["*__~-~|~===**-|~", "*-~_=~|__|=~*--|"],
                 ["*__~*-_-||~|~=||", "**=_~_~__*||_|~="],
                 ["*__~**_||=_~_-=|", "*|-=****~|-|_-|-"],
                 ["*__~=_=-|-~~_|=|", "*-|-_-~=~|==**~_"],
                 ["*_-___*-*~=|_*-_", "*_*--~|~||_|_=*~"],
                 ["*_-__-|-~__*-_--", "**|=-_||__~|==_*"],
                 ["*_-__*-~==|__===", "*=-==|--===||_~_"],
                 ["*_-__~--|_|=_-_|", "*_**=*|~~=*|=*__"],
                 ["*_-_*|~_|_~*||_*", "*-|-~*-_=_=_-~|*"],
                 ["*_-_=-|=-**~-||*", "*---~=_=*_***-|-"],
                 ["*_-_|-=---*=-*~|", "*~|***--_-~~==|~"],
                 ["*_-_~-|||_=*~_||", "*-*=-_-~-|*-|~~="],
                 ["*_-_~*~__-=-*-*=", "**=|~__~=|=__=-~"],
                 ["*_---**|-*=*||-=", "*-_*=__-==-=_=_-"],
                 ["*_---|**~=-*||*~", "*~|=~-~_-~_-||-="],
                 ["*_--=_~-|_~=**__", "*_=|_--~|__=--|_"],
                 ["*_--~|--____==|~", "*||_|_|*~|**~_||"],
                 ["*_--~|~=*-|-|_=*", "*=~*__*~~_~~-=-="],
                 ["*_-*-_|~|-|~|_=~", "*|=~_~~*-*~~**_-"],
                 ["*_-**_||__|=__|_", "*|*~*|-=-~_*|=_|"],
                 ["*_-**=*-|**__=|_", "*_|*=||*~*=|=*-="],
                 ["*_-**|-||~_*||_-", "**=||~~~-~=~_-_~"],
                 ["*_-*||-|-=**-*~~", "*_|~_|_-=_**--|*"],
                 ["*_-*~|~=|-_||~=|", "*_-|~=-==*|~|~||"],
                 ["*_-=_=_=-*~===*_", "*|*=-_*--****=_-"],
                 ["*_-=-_|==*|~=_=_", "*_=*_||--==__~=|"],
                 ["*_-==~*--***-=*|", "*|*~~-||*-|~=|=|"],
                 ["*_-=|||~-~=|-_*-", "*_*~|-**=|=|-*_~"],
                 ["*_-=~-~*==*|~||~", "*=|==||~=_|~__~_"],
                 ["*_-=~=|_|=~*~*=-", "*=**=_-~==|~==||"],
                 ["*_-|_===~~-=-|_|", "*~__|-_*-|=_=~_="],
                 ["*_-|*_|=|*||-~=*", "**-|-_*==|----~*"],
                 ["*_-|=_~=|__~_=_*", "*~_~~*_*-|~~=|*-"],
                 ["*_-|=|=||-*_|-=~", "*~~~=-*|_==_=|~-"],
                 ["*_-||=-*||=~~_=-", "*=*=-~~_*==*-_-_"],
                 ["*_-||~|~=__~_~*~", "*~_*==|~**_==*--"],
                 ["*_-~--~=-~=~=**|", "*-*=_*_~__-==*=*"],
                 ["*_-~-*-=|*--_*_|", "*|_*_-_|_*=**-_|"],
                 ["*_-~-*-~=*_~|=*|", "*-|~--*=_||~*=_*"],
                 ["*_-~-**~=_-~~*|~", "*_|_==*-_-_=|-*|"],
                 ["*_-~-==-*_-*|~==", "*--_-|~_=*--~|--"],
                 ["*_-~===_|=|_--~~", "*~_-|~=*__~==*|="],
                 ["*_-~~--=_|**|_||", "*-==**~*-=*||-*~"],
                 ["*_-~~==-=*-~~~~~", "*_~=*|_~_||*-_*="],
                 ["*_-~~|-|~-*===*=", "***=*=~|=~|_*|_-"],
                 ["*_-~~|~_~_~_*-_=", "*=__=*|||-*_|**_"],
                 ["*_-~~~_**__|~-=|", "**|~_-**=*_*~*=~"],
                 ["*_*_-*=~-|--||~=", "*|=*=__*_|*_*==="],
                 ["*_*_*=*~=~*~*_-|", "*-=**==__~|_-=*|"],
                 ["*_*_==_=_-*=|=-=", "*--|=-=---|_*__~"],
                 ["*_*_=|_-~=~*|***", "*~_|-_|*~_*_*_=="],
                 ["*_*_|_~_|_-=|~|_", "*=_-=-*|_-=-_*=~"],
                 ["*_*_|-_|_|||_|~~", "*_~~|~_=~==--_*-"],
                 ["*_*-_~=_**=-~--|", "*~|-*=~|-_-|=|=~"],
                 ["*_*-_~|-|*-~|_|~", "*-|~_*|-*=_~-_~-"],
                 ["*_*--*_~-|~-~*__", "*=~_=~-~*=**-_-="],
                 ["*_*--**~*|~=-=|-", "*=_|*_~~=~*==-~*"],
                 ["*_*--~-=**=|-*=|", "*__=*|-_=-=*_=-|"],
                 ["*_*-*|_|~~|-=-~_", "*~==-|*_-*=|~=-|"],
                 ["*_*-==-|-_=-~-=|", "*_=|_*|~_*~~_||-"],
                 ["*_*-|*_=~||-*|*~", "**-*-_**__*-~=~~"],
                 ["*_*-|===--|~-|-_", "*-|*_**=-|-**|=*"],
                 ["*_*-~=_|==|||=||", "**--~==**~=-|-_*"],
                 ["*_*-~|*~_~|==|=|", "*__-||*-|||*~||*"],
                 ["*_**__~*--==|_|-", "**__|~~~*=*~*--_"],
                 ["*_**_=*-*|_|===-", "*|=_=*|*=|=|*==="],
                 ["*_**-=||*||-~-=-", "*~*~~_=-=_*-~=~_"],
                 ["*_**|*-_*=|-=|_=", "**=-*=---*|_~_=~"],
                 ["*_**|=|~_*~*~_=_", "*-=--~|*_-~-__~*"],
                 ["*_**||*|~=*=__-_", "*|_~=~|_~*-**=~|"],
                 ["*_*=_--|-*|-****", "**=_=-|-~=-|*_|_"],
                 ["*_*=_|--==|~|-_*", "*_~_|**=~*|~=_~="],
                 ["*_*=--*~=|==_||~", "*|=~=__-=_--~|*="],
                 ["*_*=-=_|=-~-|~=*", "*~-~=~|==*~=_*-="],
                 ["*_*=-=-_|-=|=_=~", "*=_|*_~_-*|=*-_-"],
                 ["*_*==--~=*|-=*=~", "*=||=|_=__*_-=**"],
                 ["*_*===-_|~--*=~~", "*_~**=__~~~==~~-"],
                 ["*_*=|-**-~|=_*-_", "*~-|-*|||~~**~=="],
                 ["*_*=~~_~|--||=~~", "*--~=-_|=-*|=-|*"],
                 ["*_*|*|**-|*=***~", "*-|-~_~~=~*~_=_-"],
                 ["*_*|=__|**_-~_-|", "*_=-=~_=~|-=~|~="],
                 ["*_*|=~~==~=~|*_*", "*_=|==_~~~-=|_*="],
                 ["*_*~__=-~|==-=*-", "*||_*-~=~_-~|=~-"],
                 ["*_*~_**_|||-*_*~", "*_*~**-=_=*_*_~-"],
                 ["*_*~-|---~-_*=||", "*===_=|=__**==|*"],
                 ["*_*~*|*~=*_~=_=*", "*--||||=_*_=_*~="],
                 ["*_*~=_--**|=--=|", "*_*=|_=_~~*=_|**"],
                 ["*_=__--*|-_*|=-~", "*-|~==_==|=~-_~="],
                 ["*_=_--=~-==--~|~", "*_-=-__~~*=|*=**"],
                 ["*_=_*_=--**=*|_*", "*_*==|||_***=|*|"],
                 ["*_=_*|_~*-_=|=_|", "*_-*|-|-=*-~--|_"],
                 ["*_=_*|-*=*__|=-=", "**___=~~|=_~-==="],
                 ["*_=_*~|_|_==~_=-", "*----=*_--_~~|=*"],
                 ["*_=_~--*=*=_**~-", "*==|__~===_-|==-"],
                 ["*_=_~-~=|_|=|||_", "*-_==__-~_*_=*~="],
                 ["*_=_~*~-*=|=*___", "**----_*-_**=*~*"],
                 ["*_=--~_|==-~-=-=", "*|-|~*-**~=~|_*|"],
                 ["*_=--~--|||--~=*", "*~~_*=~*=-~~_=-="],
                 ["*_=--~~*-*-_~_~*", "*--**_=*~-|=*_|_"],
                 ["*_=-**_*~--==|**", "*~~_~*_~_*||~*~-"],
                 ["*_=-=---*|-~|~_~", "*~=~-*~|-_|=|_~~"],
                 ["*_=*_-_~_-=-=|_~", "*|~_|*-*===-||*~"],
                 ["*_=*_*|~-~=-==-_", "*=_**=_***=*_*=*"],
                 ["*_=*-__-=*--=-**", "*_=-~~_~|=~|*-=~"],
                 ["*_=*-=**=-~-||-=", "*=*|-_~~=_-**|*|"],
                 ["*_=*-~-*|*_==|~-", "*~|~~|-|_*~*_~**"],
                 ["*_=*=|-=~|_=||-=", "*|~*=-~|*_||*-=_"],
                 ["*_=*|||-~_-~*_|_", "*-|*__|_~__~=~*="],
                 ["*_=*|~=~||=*--||", "*~=~=~*==|-*=-=|"],
                 ["*_==__|~|--=-=|_", "*_-*=***~-*___~|"],
                 ["*_==_=*~~|_--*=_", "*-=*=~~_|~-~~|=|"],
                 ["*_==-~||*-~-~=-=", "*=_=-_--|~=~=*~-"],
                 ["*_==*-~~-_=-|*|~", "*_=|=|~=|*~_~*_|"],
                 ["*_==*||~=_~=|*=_", "**-|_-=_=-_|-*=|"],
                 ["*_===*=-~*--_|~*", "*_|-==~=*-*~|~*~"],
                 ["*_==|~*_|_=----*", "**==||_**~|_*|*|"],
                 ["*_=|-=-=*-|_~~-~", "*~-|__-_=*~___-~"],
                 ["*_=|*||=*|-~*=_=", "*-|--=*|-*-=||=="],
                 ["*_=|~-_**|=-*-~=", "*-_====||~=~*~~_"],
                 ["*_=~_=-*|-_*|=__", "*|-|*-~_||~_-=|*"],
                 ["*_=~_=~--~*|*|_*", "*~-~~-|_|||_|*_*"],
                 ["*_=~=|=|-=~~-=*_", "*__=*~*-~*==-_=_"],
                 ["*_=~|-=|=|__*=~~", "*-_-_~==*|_|_~-|"],
                 ["*_=~|*~|*|=-_=|*", "*~**__~=~-~_*~|*"],
                 ["*_=~~_-~*=-|_||~", "*_|=__|_-|~|-|*="],
                 ["*_=~~-~**-*==-|_", "**-~===~*=_=--**"],
                 ["*_=~~*_=~==|~-~~", "*|_====|**=--_=_"],
                 ["*_=~~|__|=_-*|~=", "**-=-~~_-_-~|_*="],
                 ["*_|___=~-=*-*_*|", "*-_=*-=-*_-~_*=-"],
                 ["*_|__~*=*|-===_|", "*~~|=**__~*~-=~~"],
                 ["*_|_-=-~=~~=~*-_", "*_-|=|*~*-=_=-_-"],
                 ["*_|_*__|*|=|_|||", "*_=-=*|-|--~~-__"],
                 ["*_|_=~*|~-__*_~_", "*|_=|_-__--|_*_~"],
                 ["*_|_|-||-~~*~|*|", "*~=_-=-|_-||~~*="],
                 ["*_|_|*~--~_=***=", "*_~-|-==_*==*|_-"],
                 ["*_|_|=__*-_=-||-", "*|-~*_-_*-~~---~"],
                 ["*_|_~-_=_-**||--", "*=|_=*|*~~*_|__~"],
                 ["*_|-_=-||=**-=~_", "*|||-_~~_--~~*|="],
                 ["*_|--~=|--**~==~", "*-_=_~*~||_-__*-"],
                 ["*_|-*_=~|-~==~=~", "*~~_-*_*~=~===~_"],
                 ["*_|-*~|~=*|~_|-*", "*||_-_*|||**|~|-"],
                 ["*_|-|=|==~*----_", "*_~=~=-_-_*-_=_*"],
                 ["*_|-~|**=~=|_**-", "*_~~_|~=_~--*=~|"],
                 ["*_|-~||=*=-~--~~", "*-_*|=~|~_~=_|~~"],
                 ["*_|*-__*=~~*=-**", "****-=*~*~|-=-_="],
                 ["*_|**-|-~~|_*_~_", "*||~~~*|~===~*-*"],
                 ["*_|**|_-=~=_=_|=", "*--|-|=*-*|=|=_|"],
                 ["*_|*=~~-==-__~*=", "*_-=_~-_=*--__~~"],
                 ["*_|*|__-~|--~|-=", "*=|~--~-||==*~|~"],
                 ["*_|*|-=_~-|=-_~_", "*_~_-~~=---~_|*~"],
                 ["*_|*|=_=_==_*~|*", "*_*==~||_|-=-**_"],
                 ["*_|*|=*-__*|*-|~", "*-_***-~***==|*|"],
                 ["*_|=_*-_*=**|~=-", "*-*~-|**=_---~-_"],
                 ["*_|=_=|*~*||==~-", "*~~_-*|-|---==||"],
                 ["*_|=_~|*_=|~_=~*", "**=_-=_-*-_*|_-~"],
                 ["*_|=-*_=*--|==*_", "*~~-==_-||_---*-"],
                 ["*_|=-~====_|-|-~", "*--*_~=*|||=_=|-"],
                 ["*_|=*-~~||-__|=~", "*|__--__*~~_|-~="],
                 ["*_|==~-_==_-_-|=", "*----*~-=-=_**~="],
                 ["*_|=|~~*-|_-*=*_", "*~~-*-~*~=**--|_"],
                 ["*_|=~=*|~||~_~=|", "**~~|*~|=|_~_||-"],
                 ["*_||-||=~|~||=*=", "**-*_|_~_|~~***_"],
                 ["*_||-|~*--=|=_*=", "*~|*_*=*-=_|=-|_"],
                 ["*_||-~-|-**|_-~_", "*_-=-=~|**~|_~||"],
                 ["*_||*|~|*||=|***", "*-*_-_=-*_|~-*~|"],
                 ["*_||=~|_=*_=~==~", "**=_-||_~**-==*~"],
                 ["*_|||__*_~__**|_", "*_*__~-*=_||--~|"],
                 ["*_|||~=-_|||_**|", "*|_~_--|*-=_-~_~"],
                 ["*_||~_|_~~_=-*~~", "*-~_=*__|*=|*-~="],
                 ["*_||~~-*||||*_*|", "*-=|--~~~*--=|*="],
                 ["*_|~_|=~_-*=~**-", "*=~-=-==-**--~-|"],
                 ["*_|~-~|~==_=~__~", "*___=_**~-*~-*~-"],
                 ["*_|~*_~||*|=-*||", "**__|_--~=_|=~=-"],
                 ["*_|~*_~||===~~|-", "*|=-_*-~**=-=-=|"],
                 ["*_|~*-|=_|=___*-", "**=_-|_~|*_-=-|*"],
                 ["*_|~*|-=**|*-*=-", "*-=~*__||--~_*~-"],
                 ["*_|~=-~_*--*-=__", "**=~~*~*~~~~-=*_"],
                 ["*_|~=~~~~-=*-~_~", "*|----~|-~-_=--|"],
                 ["*_|~|*~~|~=_==~*", "*---~*--=_=__*_*"],
                 ["*_|~|==-|=-~=__=", "*_~-*|=|_~~--~=_"],
                 ["*_|~||*-_=-*-**~", "*=***=*-~|~|__~-"],
                 ["*_|~~-|_|~~*=~|~", "*-*_*~__|_=*-|__"],
                 ["*_~__-_=~_|__*~-", "*~-_~-==-=|~*-**"],
                 ["*_~__*_*~|_||=*_", "*|_-=~*|_-=_-==*"],
                 ["*_~_*=*|_|*-||_|", "*|=|~-__~_|=|_||"],
                 ["*_~_*==~*_~~-*_*", "**=|*=_*=*_|*-=~"],
                 ["*_~_=*_-*-__*__~", "*|=__|=_|*~|-|**"],
                 ["*_~_~*||_---_*-_", "*||*-=-*=_*==*-="],
                 ["*_~-__-*|-~-_||*", "*_==*|=-*__-~=~-"],
                 ["*_~--_~=__|-=_-*", "**~~_~|-_|--=|~~"],
                 ["*_~--==~=-~=~|=|", "**~|*-_==|==|==*"],
                 ["*_~-*-|=||--|~==", "**-=~*__|~|=-~**"],
                 ["*_~-*=_~_=|***__", "*=*~~==-*-|=*=*_"],
                 ["*_~-~*~*-*_-|_=|", "*~=||*~_***=-*~-"],
                 ["*_~-~~-__~=*-_~|", "*|=~=-~_~*=|=_**"],
                 ["*_~*~__*__*|*_|=", "*-==|_*~|*|~*-=*"],
                 ["*_~*~*|_*~|__*-|", "*--==-*~--~*~|*~"],
                 ["*_~=*_=-__*~~~-=", "**-_~-~__=~||*=_"],
                 ["*_~==~*~|~_=-__~", "*|*_*=-|||-----*"],
                 ["*_~|--_*__~_~-_*", "*~_-=|~=-*-=**_*"],
                 ["*_~|--=_~_|~=_*=", "*|--~|-=_~|-=__-"],
                 ["*_~|-*=~-~=*_**-", "***~*|-||~~~_-~*"],
                 ["*_~|-~*=|-~-_--=", "*=~~=*|~|~~|_-|*"],
                 ["*_~|**-==-*|~~-_", "*--=||~*||~_==-~"],
                 ["*_~|*|=--**=*-=_", "**~==-~*_~*=*-~*"],
                 ["*_~||*_|=--*=_~_", "*---*_*~_~-=*--="],
                 ["*_~||=~~*=||__=_", "*-_--==-__-|_*=-"],
                 ["*_~|~**~|-=~_|-*", "**-_-_*_--*=_=~~"],
                 ["*_~~_-_=|=|*==_~", "*-*==__~*|~-||~-"],
                 ["*_~~_||~-__=|~=|", "**|_|~*~|~~~*~*="],
                 ["*_~~-==*~|=-=_*~", "**~=-|=~~*--|==_"],
                 ["*_~~=|--*_~=*=~-", "*-~*-=-~*-~__-=-"],
                 ["*_~~|-=_*-_~||=~", "*-=~=_*|-=-*~|**"],
                 ["*_~~|||~_=-=----", "*=_-_=*=__-|=~||"],
                 ["*-___|__==|*==~=", "*|~*~_~=_=||=|-="],
                 ["*-__-|*_==**_*_|", "*-=~|--=*_--|-|~"],
                 ["*-__=*---_=|=_|~", "*_*_=-_~-_-~|-=="],
                 ["*-__=|~*=_-=__-=", "*~|--_-~=|-=~|_*"],
                 ["*-__=~|==|-*~==|", "*|~=_*--~**~|_||"],
                 ["*-__|==-*~=~-|~=", "*|-||-_**~-=-|~|"],
                 ["*-_-_~**__**|*_|", "*|-~---|==-*__~_"],
                 ["*-_--_==-||=*|-|", "*=~_|_~__==~*~_|"],
                 ["*-_--*~|=_-~*_~~", "*~|_~=~--_|~=__|"],
                 ["*-_-**|_-=-|--|=", "*-_=_*-_=-_*-*|_"],
                 ["*-_-=~*__~__-_*=", "**=**~*_-_=~*|-~"],
                 ["*-_-|*--|~_|~||=", "**__~~~~=_=-_*_|"],
                 ["*-_-|=|~~|=~-=~|", "*|--=|---__=_~**"],
                 ["*-_-|~~*__~*~_=~", "**=|_-__**~-*~__"],
                 ["*-_-~-_==-*===~=", "*--*~=~~-||~===|"],
                 ["*-_-~~~~_~~=__||", "*~_*-|||=|~_-==_"],
                 ["*-_*_=|~=*~|~|||", "*~*==|-_-|==~*=|"],
                 ["*-_*_|-|*~=~-*~|", "*~_|__=_*-|=|*_="],
                 ["*-_*_|||~*_=|**~", "**|~-**_*=_*_*-="],
                 ["*-_*--=*~=||=*|_", "*~-~=_-|*-___=*~"],
                 ["*-_**_*~=||*-|*-", "*-|~==~-~_==_-~|"],
                 ["*-_*=*_|_~=_*-=|", "*||=-___-=_~|_|*"],
                 ["*-_*=*~===~-~~-=", "*~-|_==|~--_~=--"],
                 ["*-_*=~=~||*_~*|-", "*--|_~-_|**_|_=*"],
                 ["*-_*||=_||*=_=-_", "*~=-~-*|-|*-|__~"],
                 ["*-_=_=~|*-~_*=-=", "**__||__-=__*-|="],
                 ["*-_=-|__--||_~-*", "**|-~_~*~|*|~-~="],
                 ["*-_=*|~*=*|||*~_", "*=~-__-*-~*=~|_|"],
                 ["*-_=*~*=~~|~*~-~", "*-~|-_~__|~__-_*"],
                 ["*-_==_*_=_=|=*_*", "*-**|~_-|_|--|_-"],
                 ["*-_==*~_*~~=~~~*", "*|=*~--|-|~~|=**"],
                 ["*-_=|_-|_*-~--=*", "*|=_=_=-|_|_*|*~"],
                 ["*-_=~=~-|--~=|-_", "*=|-***=|-~***=_"],
                 ["*-_=~|-==*~_~-|*", "*_|-|~~=_*~|*|~~"],
                 ["*-_|__==~~-=_~*=", "*==-|~~|~_=_=**="],
                 ["*-_|__|~-|_=*=_-", "*=~*=--~=_*=_|=="],
                 ["*-_|_~**-|_=~|~*", "**~=~--*==~-~-*="],
                 ["*-_|-=|-____=*__", "*-=**-=_~-_~~~|-"],
                 ["*-_|=*=*=~-*=-**", "*~_-=-_=~_|_~_~-"],
                 ["*-_|=|-|_=|=~|-|", "*_*__*=-|_*=*_~~"],
                 ["*-_||~-|=|||-__*", "*|=-~=-=_*--**--"],
                 ["*-_||~*_=-*~~|==", "*-~_=|||=-*|_|*|"],
                 ["*-_|~==~*~*|==-=", "****--=~*~~*_*=_"],
                 ["*-_~_=*-=*~*_|-~", "*_~~*_==~*_=*_*="],
                 ["*-_~-*__-__|_-~|", "*=~|__-||*__*|-="],
                 ["*-_~*~|~=-|-_**~", "*|~*__*-*=_|*~=~"],
                 ["*-_~=*|~__~_|*--", "*~|_~=_-||_=~~_-"],
                 ["*-_~~|*-~_~*|_-|", "***=_-=__||~_=-|"],
                 ["*--__---=~__=~|*", "*=-==--*-~=~~=_-"],
                 ["*--_-~~_~_|--~-~", "*~~__~==*~|-|_~_"],
                 ["*--_=*=_*-=_=_*-", "*-_|__|=~~=_|-~-"],
                 ["*----*-~=*|_-~|_", "*_=_=-__~_*~_|_~"],
                 ["*----*|-|=|==_|-", "*=___*_*~-*===~~"],
                 ["*---*~||==-~*_|=", "*~__|____|*=---~"],
                 ["*---|-~=_=*|*-=|", "*~=*--*-=-||~|_|"],
                 ["*--*_*_|_*-=-**-", "*_=~__~*--=|~-*|"],
                 ["*--***|_*=~~---=", "**|-*~~__|__===*"],
                 ["*--=_-_=~==~==**", "*_=*~*=_--_|~==-"],
                 ["*--==_*|~|--|~|_", "*---=*|__~||-__-"],
                 ["*--==-**-|_-__==", "*~|*-=-|~-~*-_~~"],
                 ["*--==-=_*~_*=-_*", "**=*~_*|_|~|~*|_"],
                 ["*--==-~||_--=--_", "**~**~****~_|~-~"],
                 ["*--==*-~*_|~_~_=", "*|||=-_|~_*|*|=_"],
                 ["*--=|-~~-*_=|=*_", "*|_==-=|-*~|||~|"],
                 ["*--|--|=|*~~~|**", "*|==-~~~=-_=_=-*"],
                 ["*--|-~|=*|--~-_-", "**=_~~-*=-*|-~=|"],
                 ["*--|=|~|_=~=~=|-", "*=*_~~_~=*~_--~|"],
                 ["*--|=~-**~==*|~_", "**_=_-_-|__-_||~"],
                 ["*--|~_*_==~_-|*_", "*|-|--_**=~=_~*|"],
                 ["*--~_=~_-~*__-~_", "*_*-|=_|__~=|-|="],
                 ["*--~_~*~_||*_*|*", "*_|**_*__*|~~=*~"],
                 ["*--~=_*_-==-|=|_", "*~_===_=|_|=--_-"],
                 ["*--~|-*=~|*=|=__", "*=_*=-_|~_-~**=*"],
                 ["*-*_**_*_|*~-=|-", "*~=~|~~=|__--*--"],
                 ["*-*_=**|~=--*==~", "*-~~|=|~-*=|_|*|"],
                 ["*-*_~_|=-|*-~~_=", "*-==*_|~|=|=~--_"],
                 ["*-*_~|_~~|_=_=*|", "*-_~|=*=|-*-=_=-"],
                 ["*-*_~~-_-~|-~*|*", "*_~-|_=|~=~~~~~_"],
                 ["*-*---~==*~-*=~-", "*=*~||==_*~*_~~="],
                 ["*-*--*-*-~~=_|||", "**||||*=~~*~=-=*"],
                 ["*-*--=|~|-|~__-~", "*|=~__-~|-=*_=-_"],
                 ["*-*--|~*-__*****", "*__=~~=|**=_=~-|"],
                 ["*-*-*_||--**_~*-", "*__|_~_~-_*~**=-"],
                 ["*-*-*|_----**_~|", "*=--=_=-||_-~*--"],
                 ["*-*-=*=|~~*~|**_", "*~_|-___|-|__|*="],
                 ["*-*-|_|_~~=~|**_", "*_-=___**~~_*==|"],
                 ["*-*-~|_=~*~-|_~|", "*|_*~|~~***~|_-_"],
                 ["*-**_--**--|*=|*", "*|-|~*~*_~~-_*|~"],
                 ["*-**_**-=~~||_=-", "*_~_-=~_=__**-~~"],
                 ["*-**--*|_-~|_**_", "**-_|-___~_=~*_*"],
                 ["*-***||-**=|***_", "**-~--|-*_-|*_*~"],
                 ["*-**|*_*=-=_~=*|", "*-||*~*-==-_-~-_"],
                 ["*-**|*|_=-|*-*_-", "*-=-__=_||~==*=~"],
                 ["*-*===-*-*|=*_-=", "*_***=*|**~-|__-"],
                 ["*-*=||-|*--*_=|_", "*~~~_-*|-*=~-|||"],
                 ["*-*=~~-_~|_|*=_-", "*|~-~-__||---=*="],
                 ["*-*|_~|-=__~~=*_", "*==**~=|----=*_="],
                 ["*-*|-~-*=*--~___", "*_*=_=|_|~_|-==|"],
                 ["*-*|-~=*-*~_=~||", "*~~~*|-_=~-|--*-"],
                 ["*-*|*-=|=_~|=||-", "**_-*-|-**~~|-|*"],
                 ["*-*|*=~*|~-=***_", "*_~-**=*|==*~-=~"],
                 ["*-*|=-|*|~~~=*|*", "*=*~|*~=-|=-|||~"],
                 ["*-*||~~|_*|~_||~", "*|_**_=~*~|*~*|-"],
                 ["*-*|~*-~*~|*|=~_", "*||_=~==_~_||*=|"],
                 ["*-*|~~__||=-~=*~", "**-_--||==__-*|~"],
                 ["*-*~*-_=||*_~-|_", "*__****-_~=|==-|"],
                 ["*-*~==_*-**|=**_", "*|=__*|-=__=___|"],
                 ["*-*~~*_-==*|=|**", "**-=|*~~=|~-=-=|"],
                 ["*-=__*=~=|-~=**|", "*-*-*_*~||~-||*_"],
                 ["*-=_-~~-=~|~=**_", "*||~*-|=*---_**~"],
                 ["*-=_*-~-~*=~=||~", "*=|*~~==~_~*-~-*"],
                 ["*-=_**|__-~--|~_", "*_=~~~~_=-=__~=_"],
                 ["*-=_**|-|__===|-", "*||*|**~-_-~-~-="],
                 ["*-=_*~-|-|-__~~~", "**==|~--**-~-=~_"],
                 ["*-=_=_-_~|*~|*_|", "*~-=||_=_=-*|*-_"],
                 ["*-=_==~=|**~~-_|", "*|-=_~=-*-*-||=="],
                 ["*-=_~|*-~_~~-~=*", "*_~||_~~=|*==-=~"],
                 ["*-=--_~~*=__|-_-", "*-_=*__=-*~_|*__"],
                 ["*-=-=-~~=||**=-=", "*-_-~=|~|*-_=_=*"],
                 ["*-=-=|*_*=~**-=_", "*-=~-__-=_*___|="],
                 ["*-=-|*-*|~|_*|==", "*=~_=|*_-__-__-*"],
                 ["*-=-|==~~~~*-~=-", "*=~~~~_*_||=*_-_"],
                 ["*-=-|~|~-=~*__-~", "*~_=|__=_~~=~=*~"],
                 ["*-=-~=~*_|~*=|-*", "**~_=*~*~*_=__-~"],
                 ["*-=*_--**--===~*", "**|~~|||**|*|-=~"],
                 ["*-=*--=~*==|||_|", "**-|*-_-_==||*_*"],
                 ["*-=**=|=|~~|~=-|", "*-=|-~~*|=~*==-_"],
                 ["*-=*=*=||~~_**~=", "*|~-||=*~*-*|_|="],
                 ["*-=*==_-_~*|~~=-", "**-=-_==*=-|*|=="],
                 ["*-=*~__|*=~|*|-*", "*-|*_|=~*||~~_~~"],
                 ["*-=*~~-*|~-=_~--", "*||-~=~|*|-|_=*|"],
                 ["*-==*=~_=--~---|", "*-|~-|~_|~_*_=-|"],
                 ["*-===__*__-*~~~_", "**-||==*__~_=|*~"],
                 ["*-===--=|=||~=|~", "*~*=|*===|~=|-*_"],
                 ["*-====*~=~*-*=_|", "*=-__*-=|-*==*-*"],
                 ["*-===|__||=*~_-~", "*__=_*-=*-_~*|_="],
                 ["*-===~|_=_=-*|_|", "*|_-|=|~=~==*=|-"],
                 ["*-==~=*_~--=|*|-", "*|_-*~_|_~*==||_"],
                 ["*-==~~-_*_*~*|_~", "*-|_=-||***=-_**"],
                 ["*-=|-__==|-_*=|_", "*-_***-=*_|*_-|_"],
                 ["*-=|-=_~=|||~~*=", "*|-~~==_|~_=||__"],
                 ["*-=|=-_-~~**=_~*", "**_|~~~-~~**~-|-"],
                 ["*-=|==_-=_-==-=*", "*=*|_|*~-_-~*_-*"],
                 ["*-=~_-~~_-_~=_*|", "*~|=-_-==_-|*|=-"],
                 ["*-=~-_=_|-*|-__*", "*-|-*_|=-|_=||=|"],
                 ["*-=~-*=-|||=_|_*", "**_~~|~||_*~-~~|"],
                 ["*-=~-*||~~|*~|*=", "***-=_|~~||__-_*"],
                 ["*-=~*~~==|_*~*-=", "*|**__-=|-|*__--"],
                 ["*-=~=~~-*--*=~~*", "*~|=~|*---*|_~_-"],
                 ["*-=~~__|-*_|*_~_", "*~~--|_*=*=**-_*"],
                 ["*-=~~-_||~~|_~*-", "*_-=|*-|~*=-=_~~"],
                 ["*-=~~*___~_===|~", "*|_~||*-_-*_~*=~"],
                 ["*-=~~*=||~|*|~-=", "*~|**|*=~=~|__*-"],
                 ["*-=~~~_~*--_|*-=", "*_--~-|-=*_**=|_"],
                 ["*-|_-_*~~__**|-_", "*-_=|***-**-_~=|"],
                 ["*-|_-=|~=*_==|~-", "***-_|-~-||*|*~_"],
                 ["*-|_-|=~=~=|-=-|", "**-*_**~|_*=|~_-"],
                 ["*-|_-~|*|=_*~-*-", "*|~=*|~|_-_|=||="],
                 ["*-|_*_-~-|*~|*_|", "**=--_~_||**_|_|"],
                 ["*-|_*_~_~|_-_=~|", "*~=_-~=|-**|*~=-"],
                 ["*-|_*==*~_=~_*~=", "*=|-||_~~|*|_***"],
                 ["*-|_=*-~|**~|-|*", "*--~_*_-|*==||*-"],
                 ["*-|_==~**-|~~_=~", "*-|*-|-_*==*|*=|"],
                 ["*-|_~==~*-=~|_*_", "**_=_--_-_-||=_="],
                 ["*-|--_~--~_=*~*=", "*|-|=-_*=*|~_=*_"],
                 ["*-|--~--=*~-=~*~", "***=*=*_-*|-_~*|"],
                 ["*-|-*_*~-=|~|_-~", "*=-|*~~|_=|-*-*-"],
                 ["*-|-=__*=*--=~_-", "*~*___|*-~--=-||"],
                 ["*-|-=-~_|~-_-*_=", "**=__|_||_|-=*_~"],
                 ["*-|-||=-|~_|=_-|", "*-*~~~~-=_||*-|*"],
                 ["*-|*--==_|---=*-", "*_=~=|--___==_*="],
                 ["*-|**-_-~*_~_~_*", "**_~|||~*_=~*=-~"],
                 ["*-|*=_~||~**=~_=", "*=*|~_~-*|=_*|-_"],
                 ["*-|*=~~~_|=-**|_", "*~-**_|-*_*-|_~|"],
                 ["*-|*|-_=*=_~*__|", "*-=*=_*-*_*~=|~|"],
                 ["*-|*|=__*|||-|~|", "*==**-_|*_--~~-|"],
                 ["*-|*|==_~~--_|=-", "*_|~~|-=*----|=*"],
                 ["*-|*~-~~=-_~*-_|", "**--=|_-|==__|_~"],
                 ["*-|=_|-*~==_**==", "*=_--_==-=~~=|~~"],
                 ["*-|=_|-~|_--~|*~", "*=---|-_~~_-==|-"],
                 ["*-|=_~-||-~_|**-", "*~~~_~__=|*~-||~"],
                 ["*-|=_~=*_|~=_===", "*||~|-*|~|-*~=_|"],
                 ["*-|=--*-~*--~=|*", "*~*-||---|-|*|_="],
                 ["*-|=-**-*-__~|~~", "*=-|_**==|-~=~~_"],
                 ["*-|=*_~=~-==-|*=", "*__|*=~=-||~==~-"],
                 ["*-|==|~|_|*=__||", "*--*_|=~-_|_-~|="],
                 ["*-|==~|-*||=||=-", "*-*|_-*|=-||--~_"],
                 ["*-|==~~-_--|_~**", "*--=|--_|_*=-|-~"],
                 ["*-|=|-=___-=*~*-", "*_~*_||~-*-*=|_="],
                 ["*-|=~|-|=|*_*|=|", "*=|=-*-*~-|~*|~~"],
                 ["*-|=~~-|*_==|-*_", "*|-~*|=|*|==*|**"],
                 ["*-||_|~-=*_~===-", "**=*_-_**~-*-*=*"],
                 ["*-||_~|~_~-|_-*|", "*~-*|-___=**||*_"],
                 ["*-||--|--~*||-=~", "*|*-~~~~|_~_*~_~"],
                 ["*-||-|*~*~~_=~*~", "*-|-~*~=_*-~~=-*"],
                 ["*-||*||||===~-~~", "**_|_~-|_**-|*||"],
                 ["*-||*~**-_~~|-==", "**|-_=-_~__==~*="],
                 ["*-||=_|||*_=|=*=", "*__~=*=*|~*__-~="],
                 ["*-|||_*=*_|==~_=", "*~~===~_*~*-=_=~"],
                 ["*-|||*=*_=~~-***", "**=*_|=~*_=~~~~-"],
                 ["*-|||~*_-~==*-**", "***~_*~__-**|___"],
                 ["*-||~_*=~=_|||-|", "*__~*~~~|___**|="],
                 ["*-||~-|~_*~~_=_~", "*==*-~*|-|*=-||*"],
                 ["*-||~-~=-_|||~==", "**__-|~-_~_**_-~"],
                 ["*-||~~-_|=_|=|~-", "*|--_~_||~=*-__-"],
                 ["*-|~*-=*|_~=-|==", "*-|-===~-*~|_~-_"],
                 ["*-~__~~||*-=|_*~", "*|==~|-_~~=-~--_"],
                 ["*-~_*__~|~|~_||*", "*_|||-|_=-==_*=="],
                 ["*-~_*-_|~*~~_|--", "*_~_=-_~~~|_~=-|"],
                 ["*-~_*|=|~|*|_*~*", "*|~*=|=|_*_-~_~*"],
                 ["*-~_*||_*-*_~-*|", "*_|~|__=~|*~==_~"],
                 ["*-~_*~**-=~-|*__", "*~_|-~-*|-|-~~|*"],
                 ["*-~_*~|-_=*~~___", "*~*_====--~|~||~"],
                 ["*-~_|_~=~=**_~~-", "**-_|==*~__-=~-="],
                 ["*-~_~|-*~|*=~--*", "*_*=|*~*___~-*|-"],
                 ["*-~-_--_--|==~-~", "*|*-~~~|~=_~*~|~"],
                 ["*-~-_-*|*|~||**_", "*_=_|_*|_---==~-"],
                 ["*-~-_~||~-~~_=-~", "*=_**=~*~~~|_=_~"],
                 ["*-~--~_=*|~*~|**", "*=-=*-~=-*=-=-=|"],
                 ["*-~-~_|*~_=-=_=_", "*~__|~~||=*|--_="],
                 ["*-~-~|-|~|*~=-~|", "*~=**=|~|*-_~-*_"],
                 ["*-~*__=_=-_=*=~*", "*=~=__|=_-*=*=~*"],
                 ["*-~*_==_-|_*||_-", "*-|=-==-___|==_~"],
                 ["*-~*---|=*~**=~-", "*_=*_|**=-*__--_"],
                 ["*-~*-~|_|-**|~*=", "*~_~=|~_~_=|=|~~"],
                 ["*-~***~~~_|=_-*-", "*|~_=~*=|~--*~-="],
                 ["*-~*=_=-~=~-|~**", "*~~_=-__*=__-~~|"],
                 ["*-~*|--*~-*|___~", "*|*=*~-|_-*=___="],
                 ["*-~*~_|--||***~=", "*|||_|~__*__*_-~"],
                 ["*-~=_*_||*-_|==|", "*_|_~=_*|-_~*|*="],
                 ["*-~=_~~-=_~__|_~", "*|_*~=-~--*~=|_-"],
                 ["*-~=-*_*==-*|~*-", "*-|||-_*-~~~*-__"],
                 ["*-~=-==**|=~~|*~", "*-~_*==-*=*~~=**"],
                 ["*-~=*-*=*|_*|_*|", "*_=__~_=*_|=_*|~"],
                 ["*-~=*==*~-_*||*|", "*_-~*=|=*_~=*~_="],
                 ["*-~=~*--|-|-__*~", "*_***-*~_-~-~-~_"],
                 ["*-~|_**-=__=__-=", "*==||-~_~*=_*_*|"],
                 ["*-~|*~~=-=~_||=~", "*|~*=*=-=_~~*=_~"],
                 ["*-~||*_=-*-=|*-_", "*_==~~_|~~-~*|=*"],
                 ["*-~||||*_=*~~_-*", "*-=|-=__*-|_=-__"],
                 ["*-~|~-_-=~--=__~", "*|--||-_--_~*-=-"],
                 ["*-~|~=*~=~=~||_|", "*-**|*_-===|=_~|"],
                 ["*-~|~~=_=*~|=|=-", "*=~*=~-~=_-=~*-*"],
                 ["*-~~_=*~-=~=_--=", "*=|_--|*=_|*_*|*"],
                 ["*-~~--*|~__|_=|*", "*_**|*---*|-*=_*"],
                 ["*-~~=*=||_|_~~-*", "*_~=_*|=*_~|*==~"],
                 ["*-~~=~__=__|~=*|", "*_*_||~|~*~~=_|*"],
                 ["*-~~|-~=|-=--__-", "*=*~=-=_|====~**"],
                 ["*-~~|~-|-*|_=-~*", "*=_=--==**_*=~=="],
                 ["*-~~~--~-_*=_*~~", "*~|||-~*~__*|**_"],
                 ["*-~~~|||*=_||__~", "*--~-_*~=_=|=|-="],
                 ["*-~~~~_=~_~|_=~=", "*-~~|=-_*_*-|||="],
                 ["**__-~~_|**|-~__", "*-=*__|~||*|_--*"],
                 ["**__|-===_-_=-~~", "*_-~|**|~|-_-*-|"],
                 ["**__|-~||-_=~*=-", "*_~*~=|=|-*||***"],
                 ["**__|~**|-=~~~~=", "**=-*~|=-_-=_|=~"],
                 ["**__~=_~||*=~|~*", "**_-____*_*--*=*"],
                 ["**_-__=--=*-=||*", "**--~|-|**-_-*-*"],
                 ["**_---|_==*_*=_~", "*~*||*~|~=|*-*=-"],
                 ["**_--~=|_-~~|=~|", "***-~__|~|**~==|"],
                 ["**_-*_=~~**==_-_", "*|*|~_*|*|=_*~__"],
                 ["**_-==*_~_=~__~=", "*_|~_~=--|_~~==*"],
                 ["**_*_**_*~=_***=", "*~_*|*-=~~|*=**_"],
                 ["**_*---|-=_|-*~-", "*-~*--==_-=-==|="],
                 ["**_*-*-=~*~=~|||", "*=-|-~_==*-||-*="],
                 ["**_***~*=||-||_-", "*=_|=-_*~--=_-_="],
                 ["**_**~=~|-|=_-*=", "*==~*~----*||*-*"],
                 ["**_*=*|~**=~===*", "*--|=*_~|_|==-~_"],
                 ["**_*=~~|~||~|=~_", "*_||_~__~*==~_-|"],
                 ["**_*|*_=*=*|=_~~", "*~=_*|||_-_~|_|-"],
                 ["**_=_-***|**~-*|", "*~=|_*~=|~=~=|*~"],
                 ["**_=_==-*~~-~*~-", "*|~-_*_=~-=~_~=="],
                 ["**_==|~~-~-~--*=", "*===~__*-_*=_|=|"],
                 ["**_=|_~*-=~~-*~-", "*-=*-=|*|*~|-||_"],
                 ["**_|__*_*-=--_==", "*~|_~-==_||_*-__"],
                 ["**_|_-====_-_=-|", "*-*-=|**-|~__~**"],
                 ["**_|-_*_~==~**-_", "*-|-=|__||~|~*|*"],
                 ["**_|=|_=*_*=|||=", "*-|-*|*-~|=**==="],
                 ["**_|~=-_|==*-_~~", "*--~=_~*|~_*=***"],
                 ["**_~_~-~=~~~~|~*", "*||_~~*-*|~*~=-="],
                 ["**_~-**-*~_~|-_~", "**_~=-|~*_=*||*~"],
                 ["**_~-|||=*_-||-_", "*_==~~|_**=~-~--"],
                 ["**_~**-*||||**=~", "*-==~__*~|-~_*-_"],
                 ["**_~=|==*--=~_~~", "**~~=_**|||**_|~"],
                 ["**_~~-_=_||~*-=|", "*|_*=_-|~-_~|==|"],
                 ["**-__*~*=*|*-*~~", "*|=~=*-~==|___=_"],
                 ["**-_**===~=-*||_", "*_|~~|*|~-****~="],
                 ["**-_~|-_-~**-*~*", "*~-__-|-_|-==||-"],
                 ["**--_--_=-=|=_*=", "*~*|-~-|~~~|_-_|"],
                 ["**--_|_~-*-_-~-=", "*|_|_=~-*-|=-~|*"],
                 ["**--_~=|-__|=~||", "*~--=_|-~_**_-*_"],
                 ["**---___-|~-|*~~", "*_*|-_|_~|-_*~~*"],
                 ["**---__==_=-*__*", "*|~*_=~===~*=*-*"],
                 ["**---_=|-_~~=*|~", "**=-|=~==|*=*-~="],
                 ["**--*~~-~_=*~~|*", "*-*~--~_=~=-~-_|"],
                 ["**--=_|=|~*_||~|", "*=_||~*|~|*~==|-"],
                 ["**--=-_=*~_=~|*=", "*~_*_*_|=-|*-~*~"],
                 ["**--|=_|~*_-~~|*", "**-_=~-=*~*~=~*="],
                 ["**--|~~~|--~===*", "*__~=~~~|_*-=_||"],
                 ["**--~~~|-*|_|__-", "*~||~|~|=|-*=~=-"],
                 ["**-*_|_~==_|-|**", "**|_~~|**~-=_-_-"],
                 ["**-*-|=--_===**=", "*|=|-*---|_~~~_="],
                 ["**-*==~~*-~==*=~", "*|==|*_=~~|-*|--"],
                 ["**-*|-*|=--_-~*|", "*~*__|_*~|=|~*|="],
                 ["**-*|*|_=~-~_~~~", "***_*-_~||||*=|-"],
                 ["**-*~=*|-_=~~=*_", "*-*_*|~*-_=|-~=="],
                 ["**-=___*~---~*-_", "*|---||*=||*=--*"],
                 ["**-=_|~~~*|***~*", "*=||-~~||~=**|**"],
                 ["**-==--=-*_=~~=~", "*_**~~|=_=|=-~=*"],
                 ["**-=|_*=_*===_~=", "**~~~_*_=|*-*~|-"],
                 ["**-=~__=|_-||~=_", "**-*-=-=_--||=--"],
                 ["**-|_-=~|-=-*__~", "*=*=|-|=_*_*=_~|"],
                 ["**-|_=~_--~*__-_", "*~-_-*_|-|=~|*-|"],
                 ["**-|-*|=~=|~~~|*", "*==~=*=~~~--~-*~"],
                 ["**-|-|_*=-=_|_*=", "*~||-*|~||=--=-="],
                 ["**-|-|-**__|=_==", "*_*==-_=|-_~|~=|"],
                 ["**-|-|~*~|=|=|*-", "***=*=~-|-|~*=_~"],
                 ["**-|-~~*~=~__*-~", "**-_=|_|___-*_--"],
                 ["**-|*=|~_-*=|=__", "*|-||*=-~~_|=*~|"],
                 ["**-|*|~=_*~~~=-|", "*=_|_||=~=|**--*"],
                 ["**-|*~*_--=-*-|*", "*||-~**=-|-_--*-"],
                 ["**-|=-==-_~_--~~", "*-_-=_=*=_=-=*~-"],
                 ["**-|~~=~--~--**~", "***~-=_-*-=__-_*"],
                 ["**-~*-|-|-_**__=", "*_-*=~**|_-|-|=-"],
                 ["**-~~-=---******", "*=~**=-|~==-~~|~"],
                 ["**-~~-=~||~_~~==", "*-_~_-_~*|~-|=~-"],
                 ["***_-*~==|-_*=*_", "*=_-~--|---~|**_"],
                 ["***_=*~*=|*=_*_|", "*-|*-|_~=|~|~|=_"],
                 ["***_|~=_-_~-=~_-", "*~|_*-|_*|_==~|~"],
                 ["***_~-~|_~|_~-__", "*_|=||*|*|~|_*=|"],
                 ["***-_*|**___|_--", "*=*-=~**~=-=|_||"],
                 ["***-_|~~__~--|=|", "*____|~~_-=~~||-"],
                 ["***---~*~_|~*_--", "*|*_==|_=*-=~_*|"],
                 ["***--~*|-|*-|_-|", "*~~_~-_|~_=-__-~"],
                 ["***-*=-|~|-=-_**", "*=|*-~*===~-|=**"],
                 ["***-*=~*~~||==-~", "*=~=~*_||-~||=*_"],
                 ["***-*||~~-|*=_=-", "*_*~~=~__|=*=~~*"],
                 ["***-*|~|=~=_~|~|", "*||*~-=-_|~|*__~"],
                 ["***-=_--~=--=--*", "*|==|*_~*|__~=*|"],
                 ["***-=_-~_|_==-*-", "*-=-_=*~~_-*-~~|"],
                 ["***-==|_*-_~~~~~", "*=|_-=____|_**__"],
                 ["***-|*|__-|*-_|~", "*==-==*_|||~_*--"],
                 ["***-|||=~=~=_||~", "**||-_--=*|=*-*~"],
                 ["***-~~_=-*~_*--|", "*_-|==~|=*_*-~|~"],
                 ["****_=-~|-=~~|_~", "*=~_=_=-~_-*~-|_"],
                 ["****_~*|-|-_=*|-", "*|~=~~_~|_=*__~~"],
                 ["*****~**-~|=_|_~", "*_||**=|=__**-*="],
                 ["****=--|-*==*-==", "*_-|-|=**_~_=-||"],
                 ["****|~|~||*~-~~~", "*-_|*_---~-_|*|*"],
                 ["***=_--_-*_=~|*|", "*_-~|-~*==|_-_-_"],
                 ["***=_*_~--=*~~|~", "*__|~*=~=-|-=-__"],
                 ["***=_|**-|-*_===", "*~-=~=|~__-|*=|_"],
                 ["***=*__-=~*__~_~", "*=_|-~|_|*_*_~=|"],
                 ["***=*-_*=~||*-_=", "*--=_*~~~-~|-*-*"],
                 ["***=*|*|~_||=~=_", "*=*-*_~=*_-__*_-"],
                 ["***==-**|==_=~_-", "*=-_|=~=*_*|-||_"],
                 ["***==|=_~|_=-|--", "*_*~-~=-_*|~~*=-"],
                 ["***==|=*_|~_-_~*", "**~~*=||_~**-_-~"],
                 ["***=|**~*_*|_=-*", "*==_-|~-~_-~*|*_"],
                 ["***=~_=_|_=*|-=-", "*=~_*-=|_-|_==_-"],
                 ["***=~=-_~-=*_*=_", "*~~-=|_-_=|||_-*"],
                 ["***|-=_=-|=|*__|", "*_=-=_||--|*-_~~"],
                 ["***|*_=~-=-=~-|*", "*~*==--|*|=_~=|="],
                 ["***||_*===*|~---", "*==~_----~|===_="],
                 ["***|~-*-|_|*-~~|", "*_==|__*__*__~__"],
                 ["***~__=*-~--==_=", "*=||*_|~|-=_-**|"],
                 ["***~__=~*_~-*-=*", "*-*__=|-_-_~_|=="],
                 ["***~_*_~*__~~*==", "**=-*=_=*~=~=*=~"],
                 ["***~_|=_-|~|~-*|", "*|*|=*-*~_*__-_|"],
                 ["***~=_=*=~=~=|=|", "*-*=*-*~-*|~=-_~"],
                 ["***~||*~|~-_=*|=", "*-=_|=_-|-|=*=~|"],
                 ["**=_-|~|-|==--*=", "*=*-=|~~|-||*~=-"],
                 ["**=_*||**|~_|-_|", "*~~~_|~_~__~*~~~"],
                 ["**=_*~|*|~~|**|*", "*~-*~=~-*--|_||_"],
                 ["**=_|_-~__*=*_-~", "**_*~~_|_~-==~|="],
                 ["**=_~_--__=-_=-*", "*|*_-~--*_*|---_"],
                 ["**=-_**-*~~~-||*", "*=|||=*___***_=*"],
                 ["**=--=|*__~==~_=", "*--~-**__=_*|=~="],
                 ["**=-*_~|~=_**=_~", "*-*||-|__~=|~=*_"],
                 ["**=-*-_~_**___~_", "*|=_~~|~=||-|~|~"],
                 ["**=-=_|*|~|_|_|*", "*|~|=_-||*~_~=--"],
                 ["**=-==|-*||~_=*-", "**~~~-_~=*--*=*_"],
                 ["**=-=|=~|==-=---", "*_*_=-_=~*=|-=|_"],
                 ["**=*--_*|-~*=_~=", "*====~-~*_-=|*~*"],
                 ["**=*-~_~__=~|=_-", "*~*==|*~*_=___-="],
                 ["**=**=--~=*__|~_", "*_-~|~==_|=~~_*|"],
                 ["**=**~__|-=|*=**", "*|_|=|=|-|-=**=_"],
                 ["**=*~__-_*~==|__", "*-|-==||=---~*=-"],
                 ["**==_~=*|---=-_|", "*~_|*=|=*_*=~-=="],
                 ["**==--==_~-_|_|_", "*~~|_=~=-|-~*~*|"],
                 ["**==*-|-~_-=*|=_", "*|=_~-*___|=_|-_"],
                 ["**==|_*-|_--=|*|", "*~|*=~=-_=__~_*|"],
                 ["**==|~~_-==-=_--", "*~*_-*-|~~=---|="],
                 ["**==~-*=_-~=*=~=", "*=_*-|**-_-__~=-"],
                 ["**==~-=~-|-**_~|", "*~_-*|-_*|_=|**-"],
                 ["**=|_-|_*_~=-_~*", "*==*_*|_||_||-_~"],
                 ["**=|_-~*~|==*~|=", "*~|-~~=-_-=_*--~"],
                 ["**=|_=**=~_~=_-*", "*~-~~==*_---=_=_"],
                 ["**=|_~*|_*--~=-=", "*-_~*=|-*_*|*~=*"],
                 ["**=|*_=---|*|_~~", "*==_~~=*--|==||*"],
                 ["**=||*~-=--~_~~*", "**=*-**|-~_**~*-"],
                 ["**=|~|--~_~-~_=_", "*==|=~*-|*--=--|"],
                 ["**=~*_-_~-|||=_-", "*=_~*~=|~|=|-|*|"],
                 ["**=~*-~*=_~=|-|~", "*~=~~-__-~_**_=~"],
                 ["**=~**==~-=_-~~*", "**~*-=|~||-*__**"],
                 ["**=~*=-*-==**__-", "*|*=-|||**-_|=|~"],
                 ["**=~=_*~|*=~|__~", "*_=||_|-~*==_~*="],
                 ["**=~=-||*__|_-==", "*||**_*~=__~-*=~"],
                 ["**=~=||*|~==**_~", "*-_~=_=|-|~_|_*|"],
                 ["**=~|-|_~-|~--_|", "*_-||-~|~-*_|-_~"],
                 ["**=~|*=-_*_=*~__", "**-*-~=_|=**_~~~"],
                 ["**=~|*|*-~*-||**", "*~~~_*|*~=~|||=="],
                 ["**=~|*||_=--~=_~", "*=*=|-*||-_*~_||"],
                 ["**=~||*|=~*--_**", "*__--==|-_==*_*_"],
                 ["**=~|~**-~**_-*_", "*_~_=*==*_~=|-|="],
                 ["**|__-**==~-_**~", "**_=~*=_~-_*-_-_"],
                 ["**|__=|-=*~=*--|", "*~_~*-*==~~*_~=="],
                 ["**|_--**-_-*~*|_", "*==-_-*=~~=_~=*~"],
                 ["**|_-|-~_=-_-~~*", "*~|~_--*~|---|=|"],
                 ["**|_-|=-_~|-=~~=", "*=_||_--=*_==~||"],
                 ["**|_*-~*=~_*|*|*", "*||-~**_~*~=-_*="],
                 ["**|_*==-~-**~|~_", "*=_=*--|-||~*-_|"],
                 ["**|_=-*|_|*~*-~*", "*=|=|~=~-_-~*~_-"],
                 ["**|_=*|-=|*_**~=", "**|~_*_~-=_~=|*_"],
                 ["**|_==|~-|~-*-_|", "*=|=|_~_|=~-|-~|"],
                 ["**|_||=~~~*|_-_|", "*|*===__=|==||=*"],
                 ["**|_|~=~*=_||-_=", "*_=--~~__~_~--~|"],
                 ["**|_~~=~=_*--=~-", "*_~~**-|---*|=*_"],
                 ["**|-**_**|~*-||-", "**-*~=**_=~~=~*_"],
                 ["**|*-_|*--==-_~|", "*=|_=_=*_|-***|*"],
                 ["**|**|-|~=_|*_*|", "**~-~--==_-=_|_="],
                 ["**|*|_=*-=_~=-_|", "**_|~~~|-~~|==__"],
                 ["**|=_-~~_--__*=*", "*-_~||~|*~=*_-~="],
                 ["**|=-~|-==-|___=", "*_=~|*~|-~_|-_|="],
                 ["**|=*__~-|*~|**~", "*_==*-~~__-*-*|-"],
                 ["**|=*-|||=-|___|", "*==|*||=|~||_~=|"],
                 ["**|==__|_~~*~___", "*|=**|-=|-*=-_**"],
                 ["**|===|~*==-_-|~", "***~~|-__~*=*|=="],
                 ["**|==~||-=~-_|~~", "*|-==|=-__*_*-_="],
                 ["**||_|_*==*_~-__", "*|=_*_~-=-|*~||*"],
                 ["**||-~~=*=~=|-_~", "*~-~=|-*=_~|-*--"],
                 ["**||=*__~*-~--~|", "*=_~|~-~-|_**=|~"],
                 ["**||=|__-***~_~~", "*|~--_*-*|=~=|=="],
                 ["**||~*-*_~*-|**|", "*-=___|-_*=*-_=|"],
                 ["**||~==~~=***--*", "**|~|*_|||~=**-~"],
                 ["**|~__=-~**|-=-*", "*=_|-_-*_==|~~|*"],
                 ["**|~_--*--=|-*|-", "*-~-=~-__~-~=~|="],
                 ["**|~-__-*==~*~=-", "*-*=_-~*||*|--|*"],
                 ["**|~--_~=~_=~~**", "*|~~*-|~--|*|||*"],
                 ["**|~===*-*_=--__", "*=_~**_~_|-==-*~"],
                 ["**|~|=*~~_-_-=|*", "**|==-*-|__*--_|"],
                 ["**|~~-*||~=|~-_=", "*_~-*~~*--==-=~-"],
                 ["**|~~|=--|~=*=*~", "*_-|*|=*=~~_*_|_"],
                 ["**|~~~=||=__=_-_", "*_|~_**~_~*_*~=|"],
                 ["**|~~~~~=|-==|~-", "*_==~_~=*|=|_=_|"],
                 ["**~__|**~||_=|~=", "*-|--~*=~*=|*~*="],
                 ["**~_*~~|=~=-=_-|", "**|__~=-|_-|*__="],
                 ["**~_~_~|~=|=~=**", "*~~-==~=*~~-*=--"],
                 ["**~_~-=~=~~**-_|", "**_=_*=--=-~_*_|"],
                 ["**~-_-=|_---*||~", "*_|_=*=*|-~=~|~|"],
                 ["**~-_===_~_=-*~-", "*_~-_-~|=*|=-|||"],
                 ["**~---==-=|=-||-", "**_-~~|~|--|-=_="],
                 ["**~--*_||--~~||~", "*||*=*_|-|-_~|||"],
                 ["**~-=|~~_--~-~|*", "***_~__-__=|_-~-"],
                 ["**~-||_=*=|=**~|", "*-_*=_=-*~*||__="],
                 ["**~-~||-*~-*~=~~", "*-=_*_~=-_|_*|--"],
                 ["**~*_=|||--~__~_", "**___=-_~-*~-*-_"],
                 ["**~*_|~-=|=|=|**", "*-=~~_~--_*~~|_|"],
                 ["**~*-~-*-~|~|*--", "***=*___-=-*__|="],
                 ["**~**_*_||-*=--_", "*~|~_-_~=|=|_-~*"],
                 ["**~*|-|*_-~|=___", "*=*=|-=-_|_~-*_|"],
                 ["**~*||*~||=*=|_=", "*-=-=|_||~|=-*_="],
                 ["**~*~|_~|*_==~=_", "*||-_~-*=-|*=|*~"],
                 ["**~=_~|**|_~=-==", "*-|~|=*=*~|~=*~-"],
                 ["**~=-_=_~___=__~", "**|||~=*_=~*=|*="],
                 ["**~=--=~_=~_||~=", "*-*=_=_~-*_~-_-_"],
                 ["**~=-=---~=|_~|=", "*|~~~~__~|_~*=*~"],
                 ["**~=*=*=_=~_=~=|", "*~*-=*|_|=__*~=_"],
                 ["**~=*|=_|=**~=*|", "*__=|=|_*-*==_=-"],
                 ["**~===*=|~=-=~||", "*|_*~-==_||_*-_-"],
                 ["**~==|~_-*=|-|-_", "*_|~-_-=_=|==__="],
                 ["**~=|_~-~|***||~", "*|*|~~___||*_~||"],
                 ["**~=||=*-_=~--~*", "*|**~~*===--||||"],
                 ["**~=||=*~_|*|=|_", "*~*_*_|__~==*_-_"],
                 ["**~=~-*-*=-_--=~", "**|==|_-~|=--___"],
                 ["**~|*|-=||~-||=~", "*~|-=-==-|_==*~*"],
                 ["**~|=~*_-_|=*~*-", "*||_*~_*~=~-__|-"],
                 ["**~||~-__*|_===_", "*=-=~*|_-__~-=|~"],
                 ["**~||~|_|_-|~==_", "*~_|=|~___~~|-=="],
                 ["**~|~*~~~-**-|_=", "*|_=_-=_~|~**||="],
                 ["**~|~~||=*_-|--_", "*~_==|~=-___*-=_"],
                 ["**~~_--*~|--|-=*", "*__~_=|*~=~-**~~"],
                 ["**~~-=-_|*=~-*~=", "*_**===__*--~=--"],
                 ["**~~-|-~=-~==~|-", "*__~_|~_~~-|=_|="],
                 ["**~~*-~=~=-_=~|-", "*|*-_||_|-~|~-~~"],
                 ["**~~*~--~-*|**|*", "*-~_-|_|-_*=_=-*"],
                 ["**~~|*~-~**_||-|", "*=~_*|*|*=~-*-~_"],
                 ["**~~~_*~=~-|=|=|", "**_|--=-|_=__~=~"],
                 ["**~~~-_*===~=*_|", "*-=-|-|~~~-*|_=="],
                 ["**~~~=|~===~|*_*", "*|-_=_=__*=|**_~"],
                 ["*=__-_**-*~*=-|*", "***|**_~*-__---|"],
                 ["*=__-*~_--~*|__|", "*|-|--|=|~*-|-__"],
                 ["*=__-~_*_|-=|~*~", "*|_-*_-*___*||=="],
                 ["*=__-~*|__=-~-=*", "*|_|**=*|~*=-_-_"],
                 ["*=__|__|_*~*~|=*", "*===|_=|-*=~=-=="],
                 ["*=__~___~~_~*==_", "*~~_=-*|-**=__-_"],
                 ["*=__~_|__|==_~|*", "*~||=-=|~|~|_**_"],
                 ["*=__~--*=_||_*==", "*_=_=|__~*_**==|"],
                 ["*=_--=__~~-~=|==", "*|=*-*-~=|=-*~=~"],
                 ["*=_--|_-_-=*~|=~", "*-=*~=-_*=*-_-||"],
                 ["*=_-*--*-~=|_*|*", "*=||==-~-*=*-_|*"],
                 ["*=_-*-~~~=-|~~-_", "*_|*|*_~|*__*-__"],
                 ["*=_-=*=**||~_-*-", "*_|=|=|~_==-*~-~"],
                 ["*=_-|==--=-|~|-=", "*=~~-*~=_*_~_-*_"],
                 ["*=_-||-|=*=--~|*", "*-~~_-==~--*=~--"],
                 ["*=_-|~=|-~|-|__*", "*_=*=|-~=||_|~~="],
                 ["*=_-~_=*=~*~~-|~", "*_~~~_*-==**|*_~"],
                 ["*=_*_-|*=~*_*==*", "*~-|=~-*|~~~_*~|"],
                 ["*=_*--_=|*=-_-=|", "*~-||~*|==|-==-_"],
                 ["*=_*--*=~|==_~|~", "*~-**~-_|-*~|-_="],
                 ["*=_***=~=*~_|_==", "*=-*__*~__*=_-*|"],
                 ["*=_**=*~__|_*-*-", "*|-|-_-||||-_-*_"],
                 ["*=_*==~|~|=_-|-|", "*-=|-_==*_-*_-*~"],
                 ["*=_*|_-_~_~-|_-=", "*_=*=*-*==~|*_|="],
                 ["*=_*|_--*--==~=*", "*___|*=__=-|~|=-"],
                 ["*=_*|_~*|=_~-_*|", "*|=-*||=*-|=*~_*"],
                 ["*=_*|**~~*-*-|~|", "*-_-_=-=_*|-|-=_"],
                 ["*=_=_~=_|~||*__-", "*|-*||*-|_**~~_|"],
                 ["*=_=-==*=-|~*~=~", "*=-_---**||=**~-"],
                 ["*=_=|__*-*-|_~-|", "*-*~_~|~~-||-_-_"],
                 ["*=_=|-=*_*=-*-|=", "*---=~----_*-=__"],
                 ["*=_=|-|~=_=-*-_*", "*_||-*_=*~|_-~~*"],
                 ["*=_=|*=_--|_--*_", "*|_*=-*-|~-=*~=="],
                 ["*=_=~_*||__~=|_*", "*****=~-_|~~|-=~"],
                 ["*=_|---~|*||-~~_", "*=-|_||~_~--*--="],
                 ["*=_|--~==||=-||*", "*_||*~=-__|~=~*_"],
                 ["*=_|**|-=-=~-_**", "**__|_~*~||~|~=-"],
                 ["*=_|=~====-~_|==", "*=-*=-||_|~|~~|="],
                 ["*=_|=~|~-|~~_|~~", "*|_~|-=~_~~*=*=="],
                 ["*=_|~~|_-||__~~-", "*=~-=||=*-*=_=**"],
                 ["*=_~_===|*--_~*_", "*|_~~_--__-~-~=_"],
                 ["*=_~_|__|~==---|", "*_--__|~=~**-|_|"],
                 ["*=_~*_-=~|-~=*__", "*~*_*|_-|=~-|__*"],
                 ["*=_~**_~|=-~*|=|", "*-=*~=_-|~==_*~*"],
                 ["*=_~=|**||=-*|||", "*=--*|*~~||_~~||"],
                 ["*=_~~|=-|_**|~|~", "*=_~~=~_-*~=-_||"],
                 ["*=-_-||*~=_=-__~", "*~-__-~~~_-~__*|"],
                 ["*=-_*_--=|=-=*=|", "*_=_-=|***~_*-*="],
                 ["*=-_*_**-_=~~-*=", "*_*~*-_~_*~~-~-*"],
                 ["*=-_**=-*_=|-*=|", "**-|_~*|*_-*|---"],
                 ["*=-_*|_*_*_=_|*-", "**==|-__~|||**_-"],
                 ["*=-_*~--|=|==~_|", "**~*-|~-~=-_-*|="],
                 ["*=-_=__~-~=~=~_~", "**-~|-|-||-|*___"],
                 ["*=-_|=*||-_|-_|=", "*=_=-||**||=~_~-"],
                 ["*=-_|||**|*~-*|*", "*|-*-=~=-~*~~|*-"],
                 ["*=-_~*~=_~~~=*|_", "*|*===~~_|-=|*|-"],
                 ["*=-_~~-***|_-=~*", "*~__-*-=-__|_*~_"],
                 ["*=--_*--=|-|~*_~", "*~_=*=_|||__|--~"],
                 ["*=--_=-__~-|~__=", "*|*=_~=~_|=-_|*="],
                 ["*=--_=-*|=__-_*~", "*-=--~|-=_|=_~*~"],
                 ["*=--_|~_~*_=~**=", "*=~--~|_~=*|||*|"],
                 ["*=---_~|_~**|-|_", "*~_=_~*-*|*=|_=*"],
                 ["*=--|=**|=-_~~-*", "*|~=*=|=-~=_~*-~"],
                 ["*=-*-|*-|__*~--*", "*-~||~*_*-_-==*~"],
                 ["*=-*-~_=-__~_=|=", "*-_=-~--=__=_~=|"],
                 ["*=-**|~*=|-*=*||", "*=-|**==||*~--*="],
                 ["*=-*==-|=~|-_*||", "**--=--*~-~|*~_="],
                 ["*=-*|_--**=|_*==", "**=~*=-_=-||~~-~"],
                 ["*=-*|=-=_~|*|_=|", "*|_|-*-~==*___|-"],
                 ["*=-*|=**~|_|-|*_", "*==_*=|_~**~=_=-"],
                 ["*=-*||_=~_=-|||*", "*|=_~_~==~=_*=~|"],
                 ["*=-*~-|-=_-~**_|", "*~|*~|_==**|~~|-"],
                 ["*=-=_=~_*=~~_*=_", "*-|~=*|=_=_===~|"],
                 ["*=-=_|~=|=*_=|~|", "*|-=***--~|_=|~-"],
                 ["*=-=*~_*=-==-=~*", "**=*__|*==--~_=_"],
                 ["*=-=|||*~-|**=|*", "*-____~=*|~-~=*="],
                 ["*=-=~___*-||~_~_", "*~-_*-_==-~|_~|_"],
                 ["*=-=~=*~|==-_~=|", "*_~_~-_|__|=-=_-"],
                 ["*=-=~|*-~|_**-_*", "*|_=|=*~~*=~==~-"],
                 ["*=-|__|*_|-_***|", "*_-_*_*~_=*|=~~-"],
                 ["*=-|-|==___=~*-_", "**~_=~=~*~=*=~__"],
                 ["*=-|*||-_|=_*_-*", "*=*-*_=*~_=_*~*|"],
                 ["*=-|==__~*|__-=-", "*~|=**_~_~~__-=="],
                 ["*=-||*|~_~-|-||_", "*~-||=|=|--~||_|"],
                 ["*=-|~~=*__=_*~_~", "*_**_-|-=|=*|_*="],
                 ["*=-~_-~=|-__~*-|", "*_-_=~|___*=*-_~"],
                 ["*=-~****_~*|*-=-", "*_*-_-~=~*=|=-*="],
                 ["*=-~*|_==-*_===-", "**-|_-_*|-|-_-~_"],
                 ["*=-~=-*~~~|=|~=*", "*~=||_*|-*=~|*-_"],
                 ["*=-~=~==||*===*~", "*_|*-===_-__=|-_"],
                 ["*=-~||=~~=__-_*|", "*|*~*|=~||~-*=~~"],
                 ["*=-~~=~=_~*-*~=~", "*_=|*=-**~|-|=|~"],
                 ["*=*_=||=~-|-=~~*", "*=_*-~-**~*=||=|"],
                 ["*=*_~--*=_~-~-*=", "*_-|=*|=~*_**=__"],
                 ["*=*-_*__=||_|*-~", "**=-=*==-_-___=-"],
                 ["*=*-_|~=-_==-=|-", "*||=~=_-_=-_=~=_"],
                 ["*=*--==_*~**-~-~", "*__=~=-_||_|=__="],
                 ["*=*--~|==*=|_*-=", "*_--|--~~=-__|_="],
                 ["*=*-||~~-_~~*|=*", "*|==__*_-*=**=|*"],
                 ["*=*-~|~_~-_-==|*", "*=~|=-_~==-=_|_*"],
                 ["*=**_=*~-~*=-|_*", "*|_-_-|*_||_*--_"],
                 ["*=***-~~-=-==*=_", "**~|*=-__=|**-_~"],
                 ["*=***~=-|~*~=|~~", "*-_____*-*-~~*_-"],
                 ["*=**=_-|~-*--*_~", "*~=-_~~~*-_==*~|"],
                 ["*=**===_-~~_=-=*", "**|||=-**=***|=|"],
                 ["*=**~_=*--**==_|", "*~*___=|_-~-=**|"],
                 ["*=*=--~-*~_||~*-", "*=--*-=-_|~*_||_"],
                 ["*=*=-***-*_~*||=", "*~~*=--|**~~-***"],
                 ["*=*=-|*-=|~-_**_", "*=--~*=_*|_~=_~_"],
                 ["*=*=-~-_|~|-~~**", "**=~*~_~___-_*_*"],
                 ["*=*=**~_-_|~||~_", "*=_*~-|||~*_=|=="],
                 ["*=*=*=_=_~-_**|~", "*=~|*_-_|~|*__-="],
                 ["*=*==~|~~_**-~|=", "*|_=|--~_*|=~*|="],
                 ["*=*=|=-_*=~-~~-|", "**__=-~~*~_||*~*"],
                 ["*=*=|||=*~*---|~", "*-*~=**-___-~-=-"],
                 ["*=*=~__*-|*|**|-", "*=|_**=*-=_=~_~*"],
                 ["*=*=~_|**~__|~_-", "*|=|~|=*=-*-|**-"],
                 ["*=*=~||~~*-*-___", "*__*-~==~-_*-~-_"],
                 ["*=*|_-_|_~~_~=_~", "**~--~~_~|-_*_|~"],
                 ["*=*|-==~~~_=*|||", "*|-=*-===**==*_="],
                 ["*=*|-|~~*-*|__*_", "*-~|-*~-==||~___"],
                 ["*=*|-~_-|~*=|~*~", "*~=-=~=_||~-|~*_"],
                 ["*=*|-~-*_-|_~-==", "*-_*-~=--_-~-=~~"],
                 ["*=*|**--|__=*~*|", "*____|=*-_**=~--"],
                 ["*=*|=_*_=_-=*-|*", "*||~==*_*=|-_~=*"],
                 ["*=*|=_|~-|-__=_-", "*~*=_*~=~~~-=_*="],
                 ["*=*|=*~~|*~*=_*~", "*-|~-_-|_=~_|_*="],
                 ["*=*||~|=__=-|_~*", "*|~~*-~-**~-=~~_"],
                 ["*=*|~~**_-*--|*|", "*--|*==*|-~|~_~-"],
                 ["*=*~_-_*-==-_*|=", "*_-*=~-~_~=||~_~"],
                 ["*=*~_==~=**~*~||", "*=_**-=~*~_*=*~-"],
                 ["*=*~_~--~__|*-*|", "*-|**=--=*|--~=|"],
                 ["*=*~-==__-|=~~~*", "*|*___-=_=--|_-_"],
                 ["*=*~-|~_**|_=_**", "*-|~=__|~-=*=~|~"],
                 ["*=*~-~_*|~__==-~", "*==*-*=__-|*=~=*"],
                 ["*=*~*_=|*~*||=_~", "*-|-|~|_**|-*-*="],
                 ["*=*~*|-~__=_=*-=", "*--|-__|_~~=|||="],
                 ["*=*~=_|_~|~=*-||", "*-__~-|~-=~~=~|_"],
                 ["*=*~=-*=|||~__~*", "*-~=*==-_~_||~*_"],
                 ["*=*~=*-~|_-*|*_-", "*_~__*=-_**-*|~~"],
                 ["*=*~==*-|_~*~|_*", "*~__*|*_=~_*~~=="],
                 ["*=*~|*=|-_*~_-~~", "*==|~*___~~_~=_="],
                 ["*=*~~_=*~=**||~|", "*|---_|=*~*-~*~|"],
                 ["*=*~~|_==-~-~_*_", "*=-_|-_*|__**-*="],
                 ["*==__=__~*=-~-~*", "*|=-=|~|=|*-|=*_"],
                 ["*==__~~_*~~-*==|", "**=|-*__~=-=||_*"],
                 ["*==_-_*|_**||~--", "**_--_**|*-=_-*="],
                 ["*==_**|~*~*|_-==", "*_-~||=*-|~|*-=_"],
                 ["*==_=--~_*****-~", "*=~_=_~_=*|~__*~"],
                 ["*==_|*__~|=|*--_", "**_*--*__--|=|*="],
                 ["*==_|**_*~~_--~-", "*_~-*~_|-*-*~~*="],
                 ["*==_|~=_|||_==~*", "*_=--*_=|=_**=||"],
                 ["*==_~__=*_-~||||", "*~*_~=|=_-|||-__"],
                 ["*==--=|-*==*|_|-", "*-_-~*_|_*==~~~|"],
                 ["*==--|*-_-~=|~-=", "*=*--=-*|__|*-*_"],
                 ["*==-=~|~*-__=~_*", "*|=*_~*~=__~*-**"],
                 ["*==-~|*~=~*|-|-|", "*-_=--=_*||=~-**"],
                 ["*==*-*=~_|_|*~_-", "**|~*__|_~~~|=*|"],
                 ["*==*||_--_-=-=||", "*~~_=_|~~*|=~-_="],
                 ["*===-_-_=*-|__==", "*-~*||=_*~**-_*|"],
                 ["*===-~-=|-*|*|_=", "***_=~-~_|_-*||="],
                 ["*===*-=-*--|=_|_", "*===||=***=|***-"],
                 ["*===*|_=~*=~-|--", "*-_=*|~**=-_~*||"],
                 ["*===||-~|_**~=_-", "*|*_-=~_~=*~_=-="],
                 ["*==|_=-~-=-*_~*|", "**|=_-=||||~--_|"],
                 ["*==|_|~|-**=*=*|", "*-_-_-=-*~-=~|*-"],
                 ["*==|-*_~-|-=~|__", "*~|_=-_~*~=-~|*_"],
                 ["*==|*|*--*_~--|*", "****|--_=-_|=_~="],
                 ["*==|*|==__-*_=*-", "*__*_~|==_|*~__~"],
                 ["*==|=**~-~_~|--|", "*-_~=_=_=_||_~**"],
                 ["*==||_---=*~*|*|", "*=*=-**-=--___**"],
                 ["*==||_-=_=~|_*_=", "**___||_*==*--|*"],
                 ["*==||=~|**~~||=*", "**|=_-__*-|=*|-_"],
                 ["*==||~~|--_~_|=|", "*_-*=**|=||=~=~-"],
                 ["*==~__*-|*_*=_=|", "**-|~*||~=|~||--"],
                 ["*==~_|-|=__~=_-=", "*==*_~~-~-~|||*_"],
                 ["*==~*_|_=_=|=|_*", "*~*__*_**|-*=|*~"],
                 ["*==~****|~*--*_*", "*_*~-|-||~~=_=~*"],
                 ["*==~|~*-||__-=~_", "*|*~--|~*~-*~*-_"],
                 ["*==~~_~=-=|*|_=-", "*|-_~*=-_-*~~=-="],
                 ["*==~~|~_~_~*=__~", "*||~=_-|=*==-|=~"],
                 ["*=|_-|_~-|*-__=*", "*~|-=|-|=-|**-~*"],
                 ["*=|_-~=**__*=**=", "*__*~-_~=-~**~**"],
                 ["*=|_|_~-=**~=__=", "*~--___=_|-|=-|~"],
                 ["*=|_|--~~*-**|~-", "*~=_|=|||=_*-|=-"],
                 ["*=|_|~*~~**__|*_", "*-=*|_~*_-_=_~*_"],
                 ["*=|_~*|_|~||-*~|", "*_=~~=__=~~|=|=|"],
                 ["*=|_~|-*|--_||~~", "*_|~=~=~|==~-|_|"],
                 ["*=|_~~=~==-_*_~*", "*=_-|*~*=_**=*=="],
                 ["*=|--_*=-|-=****", "*=~-|~-*~=_~*-*-"],
                 ["*=|--*|_*=*~|||=", "*=*=_|=--*|=~|~_"],
                 ["*=|-*-~--=~=-=*_", "*_|*|_|~=-~-*___"],
                 ["*=|-**=|-~||=~_|", "*|~~=_~_||__=|_="],
                 ["*=|-*~_-==~_|_~-", "*~*||*-~*=_*_-~="],
                 ["*=|-~~-~~~~|-=|_", "***_~__=~_=**=*|"],
                 ["*=|*_*-||_|-=*=*", "*-*|-_~=~=*_~==-"],
                 ["*=|*_=|**~~___*=", "*_~**|=*~-~_~~|~"],
                 ["*=|*=~=_-|=|=~-=", "*=_~~=-_|||*||=|"],
                 ["*=|*|=|-=*-*=_~*", "*~_=__||~_~**~**"],
                 ["*=|=__*_|=~=*|~-", "*====*_|~=~*-=-~"],
                 ["*=|=_=*===**~||~", "*=*=_~_-=~~-_=_|"],
                 ["*=|=_|_~-~=|_|=_", "*_|_~-|*=--_|***"],
                 ["*=|==~==-|-*=--*", "*=|-~_||-_-_*~-~"],
                 ["*=|=|_=~~--=~~__", "*_**==~=*|~~~-|="],
                 ["*=|=|_~-~|=~*_-=", "*~=-|*-_|*|-=*_-"],
                 ["*=||__=*==|_~|_*", "*~*=-~=*__|*|*||"],
                 ["*=||_|*-|~-~||_=", "*-~*--|-~~___=_~"],
                 ["*=||==|~__|==-_*", "*=|=*_*=_||~~-|~"],
                 ["*=||=|--***|---*", "*-~-=***_*-|||*~"],
                 ["*=||~*=__|-*_=_-", "*|=*=~=-*|~*-_-_"],
                 ["*=||~*~_~*--~-|~", "*|==~_|-**=-|*-~"],
                 ["*=||~=-_|~-*=__-", "*_*-*=-|*_*-_~~-"],
                 ["*=||~|-==___|_~-", "*_-|-=*-_*~|*~-_"],
                 ["*=|~_-**_-=*~~=-", "*_|*_--|_=_=_~-_"],
                 ["*=|~_-|_|~__~*--", "*_*=_*=____~_*|~"],
                 ["*=|~_*-~|-|-----", "*_|_=|=_|**--|=~"],
                 ["*=|~_~-*__*|*-|-", "*||~*-|_=*~=~-=="],
                 ["*=|~_~=~-=~-~~|~", "*=~|-*=*|_-_~|_*"],
                 ["*=|~-=*_*||-*_~=", "*|_=~||*--=__|*_"],
                 ["*=|~*_=|-==|~|*|", "***-*_-*=|___|-|"],
                 ["*=|~*=|**-~-===-", "*|_~*|~~-_~|==~="],
                 ["*=|~*|*~~__|--*|", "*-|~~|_=-~**-~~_"],
                 ["*=|~|_=|~-_~_-==", "*_=-_~*~=_==~=_|"],
                 ["*=|~|=~-|*=-~_~_", "**_-==|-***_=~|_"],
                 ["*=|~~|=*-_~~|-~_", "*=|*~_|***|||_|="],
                 ["*=~__-_=_*||~_~-", "*=--|~=~*~====*|"],
                 ["*=~_*~*|*-_|=|_|", "*~|=_*~~=|*~_~**"],
                 ["*=~_~|=--~*__*|*", "*_~_=|~|=-=*=_-~"],
                 ["*=~_~||_-~=___|=", "*~~-~~=-||*||-|*"],
                 ["*=~-_=_=|_=-*|~_", "*-_=~=~-||~**|~*"],
                 ["*=~-*-__-~_*-_|~", "**_|-__*~~*||*=_"],
                 ["*=~-*~==~-|*=--*", "*=-_-~~_~_*~=~~-"],
                 ["*=~-==_=_*~_-~==", "*||-=*-*-==-~*--"],
                 ["*=~*_*|__*=_*_|_", "*~*~~=_-__==~*=|"],
                 ["*=~*_|~==_=|-|==", "*|_|_=_=|=|*==_|"],
                 ["*=~***~_*===-_|=", "*~~~*|~_-=-~*||_"],
                 ["*=~**|--=~~||=*~", "*_****-|_=~-*~|~"],
                 ["*=~*|=_=_***_|-=", "*_-*|_*_*~_~|~-|"],
                 ["*=~*~_=|=~||**~=", "**|-*-|*||*~--~-"],
                 ["*=~*~=*~---~=_~=", "*_-_=*~=_~-_~~=-"],
                 ["*=~*~|_|__-~*=*_", "*~~~*==~~*~*~==*"],
                 ["*=~*~~~=*~*~*||-", "*_~~=|~|~~*=~=-*"],
                 ["*=~=_=_|_~**|*-=", "*|_--*-|_||-*--="],
                 ["*=~=_~~|~=_-|=~=", "*=~~=-_~*|*-_~=*"],
                 ["*=~====||=_=|-*=", "**-_=-*__*_*|_=*"],
                 ["*=~=|~=*|-~~**__", "*-==|~=~=*===_*="],
                 ["*=~=~|*|--~*~*=|", "*=_*|*--*=|_~--="],
                 ["*=~=~|=|*~_=~-*=", "*~=~~-_|~==---|="],
                 ["*=~=~~|-|_~*~|_|", "*-|=|~=|==*__~=*"],
                 ["*=~|_-~*-=_|=-~-", "*_*~~*=~=*_==~|~"],
                 ["*=~|_||*~_=*-~--", "*|_~-~--=|-|==--"],
                 ["*=~|_~__*~=*~_-*", "*|**=~-*_|*~-=|="],
                 ["*=~|_~=-|_=-|-=*", "*===|-~--||_==*~"],
                 ["*=~|-~=_~|~=*~|_", "*__*_~*==|-_||_|"],
                 ["*=~|*~_****=*~||", "*_*|~-==-|~--__~"],
                 ["*=~|=_~**_-*~=~~", "*=|**-_|=_--=*~*"],
                 ["*=~|||-**-_=*-==", "*_*-=-_=|*|_=*-_"],
                 ["*=~||~_*_~**~~*=", "*_*-**_~**~|=__~"],
                 ["*=~|~-**~~~-=|**", "***-_~__-_~~=~*="],
                 ["*=~|~*-_=_--**|*", "*~-===_|=_||=--="],
                 ["*=~|~|=-*--_--_-", "*|_~-|__-~~=__-_"],
                 ["*=~~_-~~|~~~|_--", "**~|_*-*~___*|||"]]


# This class handles all communications with Databases and CSV sets
class DataStorage:

    def __init__(self, openCSVFiles=True, openPlayersTable=True, openGauntletTable=True,
                 playersPathOverride: str = None, statsPathOverride: str = None, gauntletPathOverride: str = None):

        if(playersPathOverride is None):
            self.playersDBPath = f"{b.paths.databases}\\Players.db" # Default PlayersDB path
        else:
            self.playersDBPath = playersPathOverride

        if(statsPathOverride is None):
            self.statsDBPath = f"{b.paths.databases}\\Stats.db" # Default StatsDB path
        else:
            self.statsDBPath = statsPathOverride

        if(gauntletPathOverride is None):
            self.gauntletDBPath = f"{b.paths.databases}\\Gauntlet.db" # Default GauntletDB path
        else:
            self.gauntletDBPath = gauntletPathOverride

        self.csvRosterDict = {}
        self.csvDBDict = {}
        self.csvCursorDict = {}
        if (openCSVFiles):
            savedRosters = self.csv_GetSavedRosterList()
            for roster in savedRosters:
                self.csv_ImportCSVs(roster)

        self.playersDB = None
        self.playersCursor = None
        self.playersPendingWriteQueries = []
        if (openPlayersTable):
            self.playersDB_Open()

        self.stats = {}
        self.statsDB_DownloadRaw()

        self.gauntletDB = None
        self.gauntletCursor = None
        self.gauntletPendingWriteQueries = ""
        self.gauntletPendingWriteQueriesCount = 0
        if (openGauntletTable):
            self.gauntletDB_Open()

    # region === CSV File Management ===

    # This method simply returns an array of all managed and saved roster directories.
    @staticmethod
    def csv_GetSavedRosterList():
        returnArray = []
        for item in os.listdir(b.paths.rosterCSVs):
            if (os.path.isdir(os.path.join(b.paths.rosterCSVs, item))):
                returnArray.append(item)
        return returnArray

    # This method updates a single RosterID's SpriteID in the RosterVals.db database.
    def __csv_UpdateSpriteID(self, rosterName, rosterID, spriteID):
        query = f'UPDATE SpriteIDs SET SpriteID = {spriteID} WHERE RosterID = {rosterID};'
        self.csvCursorDict[rosterName].execute(query)
        self.csvDBDict[rosterName].commit()
    # This method adds a valid height adjustment (between 0.00 and 2.53) for the given RosterID, applies it,
    # stores it in RosterVals.db, and returns True if the Roster isn't yet full. realHeight should be in inches.
    def __csv_AdjustHeight(self, rosterName, rosterID, realHeight):
        if (realHeight == -1):
            query = f"UPDATE HeightMap SET RealHeight = {realHeight}, HeightAdjustment = 0 WHERE RosterID = {rosterID}"
            self.csvCursorDict[rosterName].execute(query)
            self.csvDBDict[rosterName].commit()
        else:
            query = f"SELECT HeightAdjustment FROM HeightMap WHERE RealHeight = {realHeight}"
            self.csvCursorDict[rosterName].execute(query)
            records = self.csvCursorDict[rosterName].fetchall()
            allCurrentAdjustments = [record[0] for record in records]

            validAdjustments = []
            for i in range(254):
                if (i in allCurrentAdjustments):
                    continue
                else:
                    validAdjustments.append(i)

            if (len(validAdjustments) == 0):
                raise ValueError(
                    f"UH OH HOMIE! You got WAY too many players with this height: {realHeight}. Can't add any more to this roster!")
            thisAdjustment = random.choice(validAdjustments)

            query = f"UPDATE HeightMap SET RealHeight = {realHeight}, HeightAdjustment = {thisAdjustment} WHERE RosterID = {rosterID}"
            self.csvCursorDict[rosterName].execute(query)
            self.csvDBDict[rosterName].commit()

            self.csvRosterDict[rosterName]["Players"][rosterID]["Height"] = str(
                round((realHeight * 2.54) + (thisAdjustment * 0.01), 2))
    # This method uses the RosterVals.db database present alongside each exported Roster csv set to generate
    # a dictionary that matches each ID of the Players tab of the rosterName roster to a SpriteID.
    def csv_GenSpriteIDDict(self, rosterName):
        allUsedPlayerIDs = self.csv_FindAllUsedPlayerIDs(rosterName)
        query = f'SELECT SpriteID FROM SpriteIDs WHERE RosterID IN ({str(allUsedPlayerIDs).strip("[]")})'

        self.csvCursorDict[rosterName].execute(query)
        spriteIDList = self.csvCursorDict[rosterName].fetchall()

        spriteIDDict = {}
        for i in range(len(allUsedPlayerIDs)):
            spriteIDDict[allUsedPlayerIDs[i]] = spriteIDList[i][0]

        self.csvRosterDict[rosterName]["SpriteIDs"] = spriteIDDict
    # This method uses the RosterVals.db database present alongside each exported Roster csv set to generate
    # a dictionary that matches each RosterID with the player's height adjustment.
    def csv_GenHeightAdjustmentDict(self,rosterName):
        allUsedPlayerIDs = self.csv_FindAllUsedPlayerIDs(rosterName)
        query = f'SELECT * FROM HeightMap WHERE RosterID IN ({str(allUsedPlayerIDs).strip("[]")})'

        self.csvCursorDict[rosterName].execute(query)
        heightAdjustmentRows = self.csvCursorDict[rosterName].fetchall()

        heightMap = {}
        for row in heightAdjustmentRows:
            heightMap[row[0]] = {"RealHeight" : row[1], "HeightAdjustment" : row[2]}

        self.csvRosterDict[rosterName]["HeightMap"] = heightMap
    # This method simply returns the SpriteID of a player on a roster, given RosterID.
    def csv_GetSpriteIDFromRosterID(self, rosterName, rosterID):
        return self.csvRosterDict[rosterName]["SpriteIDs"].get(rosterID,None)
        # TODO pretty sure this is old and unneeded, but leaving just in case
        #query = f"SELECT SpriteID FROM SpriteIDs WHERE RosterID = {rosterID}"
        #self.csvCursorDict[rosterName].execute(query)
        #return self.csvCursorDict[rosterName].fetchone()[0]
    # This method simply returns the RosterID if a player exists on a roster with given SpriteID.
    def csv_GetRosterIDFromSpriteID(self, rosterName, spriteID):
        for rosterID in self.csvRosterDict[rosterName]["SpriteIDs"]:
            if (str(self.csvRosterDict[rosterName]["SpriteIDs"][rosterID]) == str(spriteID)):
                return rosterID

    # This helper method loads all aspects of CSV and SpriteID.db information into this local DataStorage
    # object for use.
    def csv_ImportCSVs(self, rosterName):
        # This method looks for the associated rosterName folder in b.paths.rosterCSVs path to read (import) the 4
        # exported CSV files into self.csvRosterDict = {}, overwriting whatever was there under
        # rosterName previously.
        def readBaseCSVs():
            def readCSVFileToDict(filePath):
                with open(filePath, "r", encoding="utf16") as f:
                    reader = csv.DictReader(f, delimiter=",")
                    return [row for row in reader]

            self.csvRosterDict[rosterName] = {
                "Players": readCSVFileToDict(f"{b.paths.rosterCSVs}\\{rosterName}\\Players.csv"),
                "Headshapes": readCSVFileToDict(f"{b.paths.rosterCSVs}\\{rosterName}\\Headshapes.csv"),
                "Teams": readCSVFileToDict(f"{b.paths.rosterCSVs}\\{rosterName}\\Teams.csv"),
                "Jerseys": readCSVFileToDict(f"{b.paths.rosterCSVs}\\{rosterName}\\Jerseys.csv"),
            }

        readBaseCSVs()

        # This simply generates necessary db connection and cursor objects to hook into this rosterName's
        # RosterVals.db data file. If the db doesn't exist for this roster yet, it creates it.
        def genRosterValsDBConnection():
            rosterValsDBPath = f"{b.paths.rosterCSVs}\\{rosterName}\\RosterVals.db"
            if (not os.path.exists(rosterValsDBPath)):
                needsTableBuilt = True
            else:
                needsTableBuilt = False
            if (rosterName not in self.csvDBDict):
                self.csvDBDict[rosterName] = sql.connect(rosterValsDBPath)
                self.csvCursorDict[rosterName] = self.csvDBDict[rosterName].cursor()
                if (needsTableBuilt):
                    spriteIDTableQuery = '''CREATE TABLE "SpriteIDs" ("RosterID" INTEGER UNIQUE, "SpriteID" INTEGER, PRIMARY KEY("RosterID"));'''
                    self.csvCursorDict[rosterName].execute(spriteIDTableQuery)
                    # Insert 1000 entries with a SpriteID of -1
                    for i in range(1, 1001):
                        self.csvCursorDict[rosterName].execute(
                            '''INSERT INTO "SpriteIDs" ("RosterID", "SpriteID") VALUES (?, -1);''', (i,))

                    heightMapTableQuery = '''CREATE TABLE "HeightMap" ("RosterID" INTEGER,"RealHeight" INTEGER,"HeightAdjustment" INTEGER,PRIMARY KEY("RosterID"));'''
                    self.csvCursorDict[rosterName].execute(heightMapTableQuery)
                    for i in range(1, 1001):
                        self.csvCursorDict[rosterName].execute(
                            '''INSERT INTO "HeightMap" ("RosterID","RealHeight","HeightAdjustment") VALUES (?,-1,0);''',
                            (i,))

                    self.csvDBDict[rosterName].commit()

        genRosterValsDBConnection()

        self.csv_GenSpriteIDDict(rosterName)
        self.csv_GenHeightAdjustmentDict(rosterName)
    # This method turns a CSV dictionary into four files, saves them to the rosterName csv folder for
    # RedMC import, and overwrites any existing files there.
    def csv_ExportCSVs(self, rosterName):
        if (not os.path.exists(f"{b.paths.rosterCSVs}\\{rosterName}")):
            os.mkdir(f"{b.paths.rosterCSVs}\\{rosterName}")

        # Helper function to write a single CSV file from a csvData set.
        def writeCSVDictToFile(filePath: str, csvData: list):
            with open(filePath, "w", newline="", encoding="UTF-16") as f:
                writer = csv.DictWriter(f, fieldnames=csvData[0].keys(), quoting=csv.QUOTE_NONNUMERIC)
                writer.writeheader()
                writer.writerows(csvData)

        # WriteCSVDictToFile for all 4 relevant files.
        writeCSVDictToFile(filePath=f"{b.paths.rosterCSVs}\\{rosterName}\\Players.csv",
                           csvData=self.csvRosterDict[rosterName]["Players"])
        writeCSVDictToFile(filePath=f"{b.paths.rosterCSVs}\\{rosterName}\\Headshapes.csv",
                           csvData=self.csvRosterDict[rosterName]["Headshapes"])
        writeCSVDictToFile(filePath=f"{b.paths.rosterCSVs}\\{rosterName}\\Teams.csv",
                           csvData=self.csvRosterDict[rosterName]["Teams"])
        writeCSVDictToFile(filePath=f"{b.paths.rosterCSVs}\\{rosterName}\\Jerseys.csv",
                           csvData=self.csvRosterDict[rosterName]["Jerseys"])

    # This method overwrites the given RosterID in the Players tab of rosterName with the given
    # Player object. If no Player is given, the player will instead be 'removed', which
    # essentially means the RosterID is set to inactive and their name is reset.
    def csv_UpdatePlayer(self, rosterName, rosterID, player: Player.Player = None):
        rosterID = int(rosterID)
        if(rosterID > 999):
            raise ValueError(f"ERROR: RosterID must be <= 999, given value is {rosterID}")
        if (player is None):
            self.csvRosterDict[rosterName]["Players"][rosterID]["IsRegNBA"] = "0"
            self.csvRosterDict[rosterName]["Players"][rosterID]["First_Name"] = f"*{b.alphaBase26(decimalNumber=rosterID,maxPlaces=15)}"
            self.csvRosterDict[rosterName]["Players"][rosterID]["Last_Name"] = f"*{b.alphaBase26(decimalNumber=-1 * rosterID - 1,maxPlaces=15)}"
            self.csvRosterDict[rosterName]["Players"][rosterID]["NickName"] = "**************"
            self.__csv_UpdateSpriteID(rosterName, rosterID, -1)
            self.csv_GenSpriteIDDict(rosterName)
            self.__csv_AdjustHeight(rosterName=rosterName, rosterID=rosterID, realHeight=-1)
            self.csv_GenHeightAdjustmentDict(rosterName)
        else:
            player["HS_ID"] = rosterID
            player["PortrID"] = str(rosterID + 9999)
            player["NickName"] = ""
            player["ASA_ID"] = "0"
            # Check if this player is not a normal archetype
            if (player["Archetype"] is None):
                player["TeamID1"] = "7"
                player["TeamID2"] = "7"

            # Update all Players tab values
            for key in self.csvRosterDict[rosterName]["Players"][0].keys():
                if (key == "Height"):  # Skip height for now, as we need to set it specially later
                    finalVal = "0"
                elif (key in ["ID"] or key == ""):  # Skip bad keys
                    continue
                else:
                    finalVal = str(player[key])
                self.csvRosterDict[rosterName]["Players"][rosterID][key] = finalVal

            # Update all Headshapes tab values
            for key in self.csvRosterDict[rosterName]["Headshapes"][0].keys():
                if (key in ["HS_ID", "ID"] or key == ""):
                    continue
                else:
                    self.csvRosterDict[rosterName]["Headshapes"][rosterID][key] = str(player[key])

            # Final clean up, adjusting height properly and updating SpriteID db
            self.__csv_AdjustHeight(rosterName=rosterName, rosterID=rosterID, realHeight=player["HeightIn"])
            self.__csv_UpdateSpriteID(rosterName, rosterID, player["SpriteID"])
            self.csv_GenSpriteIDDict(rosterName)
            self.csv_GenHeightAdjustmentDict(rosterName)
    # This method uses exported CSVs (specifically, headshapes and players csvs) to generate a Player object.
    # Assumes rosterName CSVs are already exported and up to date. It uses rosterID to target a single player.
    def csv_ExtractPlayer(self, rosterName, rosterID):
        player = Player.Player()
        for key, value in self.csvRosterDict[rosterName]['Players'][rosterID]:
            if (key not in ["ID", "HS_ID", "Height"] and key != ""):
                player[key] = value

        # True height needs to be extracted from RosterVals.db
        query = f"SELECT RealHeight FROM HeightMap WHERE RosterID = {rosterID}"
        self.csvCursorDict[rosterName].execute(query)
        realHeight = self.csvCursorDict[rosterName].fetchone()[0]
        player["Height"] = realHeight

        # Grab HS_ID for future use
        HS_ID = int(self.csvRosterDict[rosterName]["Players"][rosterID]["HS_ID"])

        for key, value in self.csvRosterDict[rosterName]['Headshapes'][HS_ID]:
            if (key != "HS_ID"):
                player[key] = value
        return player

    # This method simply returns the first unused RosterID on the "Players" tab of a CSV dict
    # TODO Max rosterID error handling
    def csv_FindFirstUnusedRosterID(self, rosterName):
        for singlePlayer in self.csvRosterDict[rosterName]["Players"][1:]:
            if (singlePlayer["IsRegNBA"] == "1"):
                continue
            else:
                return singlePlayer["ID"]
    # This method simply returns a list of all used RosterIDs on the "Players" tab of a CSV dict
    def csv_FindAllUsedPlayerIDs(self, rosterName):
        returnList = []
        for singlePlayer in self.csvRosterDict[rosterName]["Players"][1:]:
            if (singlePlayer["IsRegNBA"] == "1"):
                returnList.append(int(singlePlayer["ID"]))
        return returnList
    # This method uses the HeightMap table of RosterVals.db to determine, given a list of SpriteIDs,
    # the mapped Ball Handling IDs for that team.
    def csv_FindBallHandlingMap(self, rosterName, rosterIDs: list):
        query = f"SELECT * FROM HeightMap WHERE RosterID IN {tuple(rosterIDs)} ORDER BY RealHeight DESC,HeightAdjustment DESC"
        self.csvCursorDict[rosterName].execute(query)
        results = self.csvCursorDict[rosterName].fetchall()

        resultList = []
        for row in results:
            resultList.append(row[0])
        return resultList

    # This function updates the given rosterName with Jersey information as defined in this roster's
    # settings.cfg file.
    # TODO buh buh buh BuhROKEN BITCH
    def csv_UpdateAllJerseys(self, rosterName):
        # This dict stores the constant values we will be editing, based on what config value
        # we're updating.
        translationDict = {"alexSlayerJersey": 61,
                           "alexVigilanteJersey": 74,
                           "alexMedicJersey": 82,
                           "alexGuardianJersey": 91,
                           "alexEngineerJersey": 100,
                           "alexDirectorJersey": 116,
                           "dannySlayerJersey": 60,
                           "dannyVigilanteJersey": 73,
                           "dannyMedicJersey": 81,
                           "dannyGuardianJersey": 90,
                           "dannyEngineerJersey": 99,
                           "dannyDirectorJersey": 115
                           }

        for configVal, jerseyPosition in translationDict.items():
            thisJerseyName = b.readConfigValue(parameterName=configVal,
                                               configFilePath=f"{b.paths.rosterCSVs}\\{rosterName}\\settings.cfg")
            jerseyContent = JERSEY_DICT[thisJerseyName]
            # Now we loop through each value in the Jerseys tab of RedMC.
            counter = 0
            # TODO REMEMBER to update to CSV dict method, as opposed to CSV list method.
            for elementName in JERSEYS_CSV_VALUES:
                if (elementName == "ID" or
                        elementName == "GID" or
                        elementName == "JerseyID" or
                        elementName == "JType_c" or
                        elementName == "JType" or
                        elementName == "JType2" or
                        elementName == "CAT_Usage" or
                        elementName == "IsAway"):
                    counter += 1
                    continue
                else:
                    self.csvRosterDict[rosterName]["Jerseys"][jerseyPosition][counter + 1] = jerseyContent[counter - 1]
                    counter += 1

        self.csv_ExportCSVs(rosterName)

    # endregion === CSV File Management ===

    # region === Players Table Management ===

    # Simple open function forms connection to Players.db
    def playersDB_Open(self):
        self.playersDB = sql.connect(self.playersDBPath)
        self.playersDB.row_factory = sql.Row
        self.playersCursor = self.playersDB.cursor()
    # This method simply executes all pending changes to the Players database.
    def playersDB_Execute(self):
        for query in self.playersPendingWriteQueries:
            self.playersCursor.execute(query[0],query[1])
        self.playersDB.commit()
        self.playersPendingWriteQueries = []
        self.playersPendingWriteValues = []

    # This method simply returns the count of Players currently in the players table.
    def playersDB_GetPlayerCount(self):
        countQuery = "SELECT COUNT(*) FROM Players;"
        self.playersCursor.execute(countQuery)
        rowCount = self.playersCursor.fetchone()[0]
        return rowCount
    # This function simply returns the first unused SpriteID from the players table.
    def playersDB_GetFirstUnusedSpriteID(self):
        if(self.playersDB_GetPlayerCount() == 0):
            return 0
        else:
            spriteQuery = "SELECT MAX(SpriteID) FROM Players;"
            self.playersCursor.execute(spriteQuery)
            maxSpriteID = self.playersCursor.fetchone()[0]
            return maxSpriteID + 1

    # This method downloads the player of the given spriteID, and returns it as a Player Object.
    def playersDB_DownloadPlayer(self, spriteID):
        player = Player.Player()

        query = "SELECT "
        for key in player.vals.keys():
            if (key == "SpriteID"):
                continue
            else:
                query += f"{key},"
        query = f"{query.rstrip(',')} FROM Players WHERE SpriteID = {spriteID};"
        self.playersCursor.execute(query)
        result = self.playersCursor.fetchone()

        for key in player.vals.keys():
            if (key != "SpriteID"):
                player[key] = result[key]
        player["SpriteID"] = spriteID
        return player
    # This function uploads a player to the given spriteID, overwriting what was there previously. If no SpriteID
    # is specified, it will default to using the player object's spriteID. If newPlayer is set to True, it will
    # insert the player as a new player and return their SpriteID.
    def playersDB_UploadPlayer(self, player: Player.Player, spriteID=None, newPlayer=False, overwriteNones: bool = True):
        if(newPlayer):
            spriteID = self.playersDB_GetFirstUnusedSpriteID()
        elif(spriteID is None):
            spriteID = player.vals["SpriteID"]

        if(newPlayer):
            uploadQuery = "INSERT INTO Players ("
        else:
            uploadQuery = "UPDATE Players SET "
        values = []
        for key in player.vals.keys():
            if (key == "SpriteID"):
                continue
            if (overwriteNones and player[key] is None):
                continue
            else:
                if (key == "Archetype"):
                    finalVal = player["Archetype_Name"]
                else:
                    finalVal = player[key]
                if(newPlayer):
                    uploadQuery += f"{key}, "
                else:
                    uploadQuery += f"{key} = ?, "
                values.append(finalVal)

        if(newPlayer):
            uploadQuery += "SpriteID) VALUES ("
            for i in range(len(values)):
                uploadQuery += "?, "
            uploadQuery += "?);"
        else:
            uploadQuery += "WHERE SpriteID = ?;"
        values.append(spriteID)

        player.vals["SpriteID"] = spriteID

        self.playersPendingWriteQueries.append((uploadQuery,values))
        # If this is a new player, we need to execute immediately to account for future SpriteID generation.
        if(newPlayer):
            self.playersDB_Execute()

        return spriteID

    # endregion === Players Table Management ===

    # region === Stats Table Management ===

    # A simple list of all stat names that apply to an entire game, rather than a single PlayerSlot.
    GLOBAL_GAME_STAT_NAMES = ["LoadedRoster",
                              "Mode",
                              "PlayDate",
                              "GameDuration",
                              "BallerzScore",
                              "RingersScore",
                              "ExtraValue1",
                              "ExtraValue2",
                              "ExtraValue3",
                              "ExtraValue4",
                              "ExtraValue5",
                              "ExtraValue6",
                              "ExtraValue7",
                              "ExtraValue8",
                              "ExtraValue9",
                              "ExtraValue10",
                              ]
    # A simple list of all slot stat names, applying only to a single player.
    SLOT_STAT_NAMES = ["PlayerSlot",
                       "IsActive",
                       "SpriteID",
                       "RosterID",
                       "Points",
                       "DefensiveRebounds",
                       "OffensiveRebounds",
                       "PointsPerAssist",
                       "AssistCount",
                       "Steals",
                       "Blocks",
                       "Turnovers",
                       "InsidesMade",
                       "InsidesAttempted",
                       "ThreesMade",
                       "ThreesAttempted",
                       "Fouls",
                       "Dunks",
                       "Layups",
                       "Unknown1",
                       "Unknown2"]
    # A list of advanced, not explicably marked stat names that can be queried.
    ADVANCED_STAT_NAMES = ["TotalTeamPoints",
                           # This stat simply returns the total team points of the team a Player played on, whether Ballerz or Ringers.
                           "Wins"  # This stat returns the total wins a player has.
                           ]

    # Downloads the full Stats database in the stats member of this object.
    def statsDB_DownloadRaw(self):
        def dictFactory(_cursor, _row):
            """Converts query results to a dictionary."""
            d = {}
            for idx, col in enumerate(_cursor.description):
                d[col[0]] = _row[idx]
            return d


        conn = sql.connect(f"{b.paths.databases}\\Stats.db")
        conn.row_factory = dictFactory
        cursor = conn.cursor()

        # Fetch all games
        cursor.execute("SELECT * FROM Games")
        games = cursor.fetchall()

        # Initialize the main dictionary to store game data
        gamesDict = {}

        # Iterate over each game to fetch its details and related player slots
        for game in games:
            gameId = game['GameID']

            # Fetch player slots for this game
            cursor.execute("SELECT * FROM PlayerSlots WHERE GameID = ?", (gameId,))
            playerSlots = cursor.fetchall()


            game["DataState"] = "Committed"
            game['PlayerSlots'] = {}
            for playerSlot in playerSlots:
                playerSlot["DataState"] = "Committed"
                slotID = playerSlot["PlayerSlot"]
                game["PlayerSlots"][slotID] = playerSlot

            # Add the player slots list to the game dictionary


            # Add this game's dictionary to the main dictionary
            gamesDict[gameId] = game

        # Close the database connection
        conn.close()

        self.stats["Raw"] = gamesDict
    # Uploads all changes made to the Stats dict to the actual stats database.
    def statsDB_UploadRaw(self):
        conn = sql.connect(f"{b.paths.databases}\\Stats.db")
        cursor = conn.cursor()

        updateQueries = []
        insertQueries = []
        # Iterate through each game in the dictionary
        for gameId, gameInfo in self.stats["Raw"].items():
            # Check if the game is marked as updated.
            if(gameInfo["DataState"] == "Updated"):
                # Prepare an UPDATE statement for the Games table
                updateGameQuery = """
                    UPDATE Games SET
                    LoadedRoster = ?,
                    Mode = ?,
                    PlayDate = ?,
                    GameDuration = ?,
                    BallerzScore = ?,
                    RingersScore = ?,
                    ExtraValue1 = ?, ExtraValue2 = ?, ExtraValue3 = ?,
                    ExtraValue4 = ?, ExtraValue5 = ?, ExtraValue6 = ?,
                    ExtraValue7 = ?, ExtraValue8 = ?, ExtraValue9 = ?,
                    ExtraValue10 = ?
                    WHERE GameID = ?
                """
                gameVals = (
                    gameInfo["LoadedRoster"],
                    gameInfo["Mode"],
                    gameInfo["PlayDate"],
                    gameInfo["GameDuration"],
                    gameInfo["BallerzScore"],
                    gameInfo["RingersScore"],
                    gameInfo["ExtraValue1"],
                    gameInfo["ExtraValue2"],
                    gameInfo["ExtraValue3"],
                    gameInfo["ExtraValue4"],
                    gameInfo["ExtraValue5"],
                    gameInfo["ExtraValue6"],
                    gameInfo["ExtraValue7"],
                    gameInfo["ExtraValue8"],
                    gameInfo["ExtraValue9"],
                    gameInfo["ExtraValue10"],
                    gameId
                )
                updateQueries.append((updateGameQuery,gameVals))
            # Check if the game is marked as new.
            elif(gameInfo["DataState"] == "New"):
                # Prepare an INSERT statement for the Games table
                insertGameQuery = """
                    INSERT INTO Games (
                        GameID, LoadedRoster, Mode, PlayDate, GameDuration, BallerzScore, RingersScore,
                        ExtraValue1, ExtraValue2, ExtraValue3, ExtraValue4, ExtraValue5,
                        ExtraValue6, ExtraValue7, ExtraValue8, ExtraValue9, ExtraValue10
                    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                """
                gameVals = (
                    gameId,
                    gameInfo["LoadedRoster"],
                    gameInfo["Mode"],
                    gameInfo["PlayDate"],
                    gameInfo["GameDuration"],
                    gameInfo["BallerzScore"],
                    gameInfo["RingersScore"],
                    gameInfo["ExtraValue1"],
                    gameInfo["ExtraValue2"],
                    gameInfo["ExtraValue3"],
                    gameInfo["ExtraValue4"],
                    gameInfo["ExtraValue5"],
                    gameInfo["ExtraValue6"],
                    gameInfo["ExtraValue7"],
                    gameInfo["ExtraValue8"],
                    gameInfo["ExtraValue9"],
                    gameInfo["ExtraValue10"]
                )
                insertQueries.append((insertGameQuery, gameVals))

            # Iterate through each player slot in the game
            for slotId, slotInfo in gameInfo["PlayerSlots"].items():
                # Check if the player slot is marked as "Dirty"
                if(slotInfo["DataState"] == "Updated"):
                    # Prepare an UPDATE statement for the PlayerSlots table
                    updateSlotQuery = """
                        UPDATE PlayerSlots SET
                        IsActive = ?, SpriteID = ?, RosterID = ?, Points = ?,
                        DefensiveRebounds = ?, OffensiveRebounds = ?, PointsPerAssist = ?,
                        AssistCount = ?, Steals = ?, Blocks = ?, Turnovers = ?,
                        InsidesMade = ?, InsidesAttempted = ?, ThreesMade = ?,
                        ThreesAttempted = ?, Fouls = ?, Dunks = ?, Layups = ?,
                        Unknown1 = ?, Unknown2 = ?
                        WHERE GameID = ? AND PlayerSlot = ?
                    """
                    slotVals = (
                        slotInfo["IsActive"],
                        slotInfo["SpriteID"],
                        slotInfo["RosterID"],
                        slotInfo["Points"],
                        slotInfo["DefensiveRebounds"],
                        slotInfo["OffensiveRebounds"],
                        slotInfo["PointsPerAssist"],
                        slotInfo["AssistCount"],
                        slotInfo["Steals"],
                        slotInfo["Blocks"],
                        slotInfo["Turnovers"],
                        slotInfo["InsidesMade"],
                        slotInfo["InsidesAttempted"],
                        slotInfo["ThreesMade"],
                        slotInfo["ThreesAttempted"],
                        slotInfo["Fouls"],
                        slotInfo["Dunks"],
                        slotInfo["Layups"],
                        slotInfo["Unknown1"],
                        slotInfo["Unknown2"],
                        gameId,
                        slotId
                    )
                    updateQueries.append((updateSlotQuery,slotVals))
                elif(slotInfo["DataState"] == "New"):
                    # Prepare an INSERT statement for the PlayerSlots table
                    insertSlotQuery = """
                        INSERT INTO PlayerSlots (
                            GameID, PlayerSlot, IsActive, SpriteID, RosterID, Points,
                            DefensiveRebounds, OffensiveRebounds, PointsPerAssist, AssistCount, Steals,
                            Blocks, Turnovers, InsidesMade, InsidesAttempted, ThreesMade,
                            ThreesAttempted, Fouls, Dunks, Layups, Unknown1, Unknown2
                        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                    """
                    slotVals = (
                        gameId,
                        slotInfo["PlayerSlot"],
                        slotInfo["IsActive"],
                        slotInfo["SpriteID"],
                        slotInfo["RosterID"],
                        slotInfo["Points"],
                        slotInfo["DefensiveRebounds"],
                        slotInfo["OffensiveRebounds"],
                        slotInfo["PointsPerAssist"],
                        slotInfo["AssistCount"],
                        slotInfo["Steals"],
                        slotInfo["Blocks"],
                        slotInfo["Turnovers"],
                        slotInfo["InsidesMade"],
                        slotInfo["InsidesAttempted"],
                        slotInfo["ThreesMade"],
                        slotInfo["ThreesAttempted"],
                        slotInfo["Fouls"],
                        slotInfo["Dunks"],
                        slotInfo["Layups"],
                        slotInfo["Unknown1"],
                        slotInfo["Unknown2"]
                    )
                    insertQueries.append((insertSlotQuery, slotVals))

        # Finally, we actually execute all statements.
        for query, vals in updateQueries:
            cursor.execute(query, vals)
        for query, vals in insertQueries:
            cursor.execute(query, vals)

        # Commit the changes
        conn.commit()

        # Close the database connection
        conn.close()

        self.statsDB_DownloadRaw()

    # This method uses a stats object, which is assumed to have a full ripped game in it, and adds it as a new game row
    # to the stats.db. It also returns the GameID of the saved game.
    def statsDB_AddRippedGame(self, statsObject, extraValues=None):
        newGameID = max(self.stats["Raw"].keys()) + 1
        newGame = {"DataState" : "New",
                   "GameID" : newGameID,
                   "LoadedRoster" : statsObject.loadedRoster,
                   "Mode" : statsObject.gameMode,
                   "PlayDate" : date.today().strftime("%Y-%m-%d"),
                   "GameDuration" : None, #TODO
                   "BallerzScore" : statsObject.ballerzScore,
                   "RingersScore" : statsObject.ringersScore}
        if(type(extraValues) is not list): # TODO maybe make these kwargs instead?
            extraValues = []

        for i in range(1,11):
            if(len(extraValues) >= i):
                newGame[f"ExtraValue{i}"] = extraValues[i-1]
            else:
                newGame[f"ExtraValue{i}"] = None


        playerSlots = {}
        for slotName,slotInfo in statsObject.slotStats["slotStats"].items():
            slotId = int(slotName.split("Slot")[1])
            thisPlayerSlot = {"DataState" : "New",
                              "GameID" : newGameID,
                              "PlayerSlot" : slotId,
                              "IsActive" : slotInfo["IsActive"],
                              "SpriteID" : self.csv_GetSpriteIDFromRosterID(statsObject.loadedRoster.split(".ROS")[0], slotInfo['RosterID']),
                              "RosterID" : slotInfo['RosterID'],
                              "Points" : slotInfo["Points"],
                              "DefensiveRebounds" : slotInfo["DefensiveRebounds"],
                              "OffensiveRebounds" : slotInfo["OffensiveRebounds"],
                              "PointsPerAssist" : slotInfo["PointsPerAssist"],
                              "AssistCount" : slotInfo["AssistCount"],
                              "Steals" : slotInfo["Steals"],
                              "Blocks" : slotInfo["Blocks"],
                              "Turnovers" : slotInfo["Turnovers"],
                              "InsidesMade" : slotInfo["InsidesMade"],
                              "InsidesAttempted" : slotInfo["InsidesAttempted"],
                              "ThreesMade" : slotInfo["ThreesMade"],
                              "ThreesAttempted" : slotInfo["ThreesAttempted"],
                              "Fouls" : slotInfo["Fouls"],
                              "Dunks" : slotInfo["Dunks"],
                              "Layups" : slotInfo["Layups"],
                              "Unknown1" : slotInfo["Unknown1"],
                              "Unknown2" : slotInfo["Unknown2"]
                              }
            playerSlots[slotId] = thisPlayerSlot
        newGame["PlayerSlots"] = playerSlots

        self.stats["Raw"][newGameID] = newGame

        return newGameID

    # endregion === Stats Table Management ===

    # region === Gauntlet Table Management ===

    # Simple open function forms connection to Gauntlet.db
    def gauntletDB_Open(self):
        self.gauntletDB = sql.connect(self.gauntletDBPath)
        self.gauntletCursor = self.gauntletDB.cursor()
    # This method simply executes all pending changes to the Gauntlet database.
    def gauntletDB_Execute(self):
        self.gauntletCursor.executescript(self.gauntletPendingWriteQueries)
        self.gauntletDB.commit()
        self.gauntletPendingWriteQueries = ""
        self.gauntletPendingWriteQueriesCount = 0

    # endregion === Gauntlet Table Management ===


class InvalidElementNameType(ValueError):
    def __init__(self, elementName):
        super().__init__("Invalid elementName '" + str(elementName) + "' of type '" + str(type(elementName)) + "'.")
class WriteElementLengthError(ValueError):
    def __init__(self, elementName, elementText):
        super().__init__(
            "Length of elementName array '" + str(elementName) + "' does not match elementText array '" + str(
                elementText) + "' (" + str(len(elementName)) + " vs " + str(len(elementText)) + ")")
class WriteElementMismatch(ValueError):
    def __init__(self, elementName, elementText):
        super().__init__("elementName and elementText MUST be the same type. elementName was '" + str(
            type(elementName)) + "', while elementText was '" + str(type(elementText)) + "'.")



